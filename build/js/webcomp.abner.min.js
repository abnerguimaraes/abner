"use strict";

//Verfica Sistema Operacional
window.isIOS = (/iPad|iPhone|iPod/.test(navigator.platform) || (navigator.platform === 'MacIntel' && navigator.maxTouchPoints > 1)) && !window.MSStream;
window.isAndroid = /(android)/i.test(navigator.userAgent);
window.isDesktop = !window.isIOS && !window.isAndroid;

(function(w, $, undefined) {

    w.tapHandling = false;
    w.tappy = true;

    var tap = function($els) {
        return $els.each(function() {

            var $el = $(this),
                resetTimer,
                startY,
                startX,
                cancel,
                scrollTolerance = 10;

            function trigger(e) {
                $(e.target).trigger("tap", [e, $(e.target).attr("href")]);
            }

            function getCoords(e) {
                var ev = e.originalEvent || e,
                    touches = ev.touches || ev.targetTouches;

                if (touches) {
                    return [touches[0].pageX, touches[0].pageY];
                } else {
                    return null;
                }
            }

            function start(e) {
                if (e.touches && e.touches.length > 1 || e.targetTouches && e.targetTouches.length > 1) {
                    return false;
                }

                var coords = getCoords(e);
                startX = coords[0];
                startY = coords[1];
            }

            // any touchscroll that results in > tolerance should cancel the tap
            function move(e) {
                if (!cancel) {
                    var coords = getCoords(e);
                    if (coords && (Math.abs(startY - coords[1]) > scrollTolerance || Math.abs(startX - coords[0]) > scrollTolerance)) {
                        cancel = true;
                    }
                }
            }

            function end(e) {
                clearTimeout(resetTimer);
                resetTimer = setTimeout(function() {
                    w.tapHandling = false;
                    cancel = false;
                }, 1000);

                // make sure no modifiers are present. thx http://www.jacklmoore.com/notes/click-events/
                if ((e.which && e.which > 1) || e.shiftKey || e.altKey || e.metaKey || e.ctrlKey) {
                    return;
                }

                e.preventDefault();

                // this part prevents a double callback from touch and mouse on the same tap

                // if a scroll happened between touchstart and touchend
                if (cancel || w.tapHandling && w.tapHandling !== e.type) {
                    cancel = false;
                    return;
                }

                w.tapHandling = e.type;
                trigger(e);
            }

            $el
                .bind("touchstart.tappy MSPointerDown.tappy", start)
                .bind("touchmove.tappy MSPointerMove.tappy", move)
                .bind("touchend.tappy MSPointerUp.tappy", end)
                .bind("click.tappy", end);
        });
    };

    var untap = function($els) {
        return $els.unbind(".tappy");
    };

    // use special events api
    if ($.event && $.event.special) {
        $.event.special.tap = {
            add: function(handleObj) {
                tap($(this));
            },
            remove: function(handleObj) {
                untap($(this));
            }
        };
    } else {
        // monkeybind
        var oldBind = $.fn.bind,
            oldUnbind = $.fn.unbind;
        $.fn.bind = function(evt) {
            if (/(^| )tap( |$)/.test(evt)) {
                tap(this);
            }
            return oldBind.apply(this, arguments);
        };
        $.fn.unbind = function(evt) {
            if (/(^| )tap( |$)/.test(evt)) {
                untap(this);
            }
            return oldUnbind.apply(this, arguments);
        };
    }

}(this, jQuery));


// ARRUMA ERRO NO IE9 ONDE NAO EXISTE WINDOW.CONSOLE
if (!window.console) {
    var console = {
        log: function() {},
        warn: function() {},
        error: function() {},
        time: function() {},
        timeEnd: function() {}
    }
}

/* ARRUMA INPUT NO IOS QUE NAO FUNCIONA DIREITO */
/*$(document).ready(function() {
    if (window.isIOS) {
        $(document).ready(function() {
            document.addEventListener('keydown', function(e) {
                window.focus();
                $(':focus').focus();
            });
        });
    }

});*/

var getXY = function(event) {
    var x = null;
    var y = null;

    if (event.originalEvent != null && event.originalEvent.touches != null) {
        var touch = event.originalEvent.touches[0] || event.originalEvent.changedTouches[0];
        x = parseFloat(touch.pageX);
        y = parseFloat(touch.pageY);
    } else {
        x = parseFloat(event.pageX);
        y = parseFloat(event.pageY);
    }

    var pos = new Object();
    pos.x = x;
    pos.y = y;

    return pos;
}

var support3d = function() {
    var ret = false;
    var supports3DTransforms = document.body.style['webkitPerspective'] !== undefined || document.body.style['MozPerspective'] !== undefined;
    if (supports3DTransforms) {
        ret = true;
    }
    return ret;
}

var getTransform = function(el) {
    var prop = "";

    if (el.css('-webkit-transform') != undefined) {
        prop = el.css('-webkit-transform');
    } else if (el.css('transform') != undefined) {
        prop = el.css('transform');
    } else if (el.css('-moz-transform') != undefined) {
        prop = el.css('-moz-transform');
    } else if (el.css('-ms-transform') != undefined) {
        prop = el.css('-ms-transform');
    } else {
        return [0, 0, 0];
    }

    var results = prop.match(/matrix(?:(3d)\(-{0,1}\d+(?:, -{0,1}\d+)*(?:, (-{0,1}\d+))(?:, (-{0,1}\d+))(?:, (-{0,1}\d+)), -{0,1}\d+\)|\(-{0,1}\d+(?:, -{0,1}\d+)*(?:, (-{0,1}\d+))(?:, (-{0,1}\d+))\))/);

    if (!results)
        return [0, 0, 0];
    if (results[1] == '3d')
        return results.slice(2, 5);

    results.push(0);
    return results.slice(5, 8);
}

var goToNextTabindex = function(event, obj, command) {
    var key = event.keyCode ? event.keyCode : event.which;

    if (key == 13 || key == 9) {
        var ficar = true;
        var ret = true;
        var tabindex = obj.attr('tabindex');

        if (key == 13 && obj[0].nodeName == "TEXTAREA") {
            return;
        }

        do {
            //Verifica o tabindex
            var gotoTabindex = obj.attr('goto-tab-index');
            var stopTabindex = obj.attr('stop-tab-index');

            //Vai opara
            if (tabindex && stopTabindex != "true") {
                tabindex = parseInt(tabindex);

                //avanca o tabindex
                if (gotoTabindex) {
                    tabindex = gotoTabindex;
                } else {
                    tabindex++;
                }

                //se Existir o elemento foca nele
                var nextObj = $('[tab-index=' + tabindex + ']');

                //Verifica se encontrou um objeto
                if (nextObj.length > 0 && nextObj.attr("is-disabled") != "true") {
                    ficar = false;                    

                    if (nextObj[0].nodeName == "ABNER-SELECT-UNDERLINE") {
                        nextObj.find("select").trigger("focus");
                    } else {
                        nextObj.find("[div-focus=true]").trigger(command);
                    };
                } else {
                    if (nextObj.length > 0) {
                        //verifica o proximo objeto
                        obj = nextObj;
                    } else {
                        ficar = false;
                    }
                }

                //removido para funcionar o enter
                //return false;
            } else {
                if (stopTabindex == "true") {
                    ficar = false;
                    ret = false;
                } else {
                    ficar = false;
                    ret = true;
                }

            }
        }
        while (ficar);

        //Se for tab deixar false
        if (key == 9) {
            ret = false;
        }

        //rodar saida
        return ret;
    }

}

var randomNumber = function() {
    //var random_integer = Math.random()*101|0;    
    return Math.random().toString(36).substr(2, 10);
}

var guid = function() {
    function s4() {
        return Math.floor((1 + Math.random()) * 0x10000)
            .toString(16)
            .substring(1);
    }
    return s4() + s4() + '-' + s4() + '-' + s4() + '-' +
        s4() + '-' + s4() + s4() + s4();
}

var generateID = function() {
    return guid();
}

var pointerEventToXY = function(e) {
    var out = { x: 0, y: 0 };
    if (e.type == 'touchstart' || e.type == 'touchmove' || e.type == 'touchend' || e.type == 'touchcancel') {
        var touch = e.originalEvent.touches[0] || e.originalEvent.changedTouches[0];
        out.x = touch.pageX;
        out.y = touch.pageY;
    } else if (e.type == 'mousedown' || e.type == 'mouseup' || e.type == 'mousemove' || e.type == 'mouseover' || e.type == 'mouseout' || e.type == 'mouseenter' || e.type == 'mouseleave') {
        out.x = e.pageX;
        out.y = e.pageY;
    }
    return out;
};
"use strict";

var AbnerUtils = function () { }

AbnerUtils.prototype.removeAccent = function (word) {
    var _this = this;

    var map = {
        "á": "a",
        "à": "a",
        "â": "a",
        "ã": "a",
        "ä": "a",
        "Á": "A",
        "À": "A",
        "Â": "A",
        "Ã": "A",
        "Ä": "A",
        "é": "e",
        "è": "e",
        "ê": "e",
        "ẽ": "e",
        "ë": "e",
        "É": "E",
        "È": "E",
        "Ê": "E",
        "Ẽ": "E",
        "Ë": "E",
        "í": "i",
        "ì": "i",
        "î": "i",
        "ĩ": "i",
        "ï": "i",
        "Í": "I",
        "Ì": "I",
        "Î": "I",
        "Ĩ": "I",
        "Ï": "I",
        "ó": "o",
        "ò": "o",
        "ô": "o",
        "õ": "o",
        "ö": "o",
        "Ó": "O",
        "Ò": "O",
        "Ô": "O",
        "Õ": "O",
        "Ö": "O",
        "ú": "u",
        "ù": "u",
        "û": "u",
        "ũ": "u",
        "ü": "u",
        "Ú": "U",
        "Ù": "U",
        "Û": "U",
        "Ũ": "U",
        "Ü": "U",
        "ý": "y",
        "ỳ": "y",
        "ŷ": "y",
        "ỹ": "y",
        "ÿ": "y",
        "Ý": "Y",
        "Ỳ": "Y",
        "Ŷ": "Y",
        "Ỹ": "Y",
        "Ÿ": "Y",
        "ñ": "n",
        "Ñ": "n",
        "Ç": "c",
        "ç": "c"
    };

    if (word != "") {
        return word.replace(/[àèìòùÀÈÌÒÙáéíóúýÁÉÍÓÚÝâêîôûÂÊÎÔÛãẽĩũñõÃẼĨŨÑÕäëïöüÿÄËÏÖÜŸÇç]/g, function (match) {
            return map[match];
        });
    } else {
        return null;
    }
}

//PEga variaveis da URL
AbnerUtils.prototype.getUrlVars = function () {
    var vars = new Object(),
        hash;
    var hashes = window.location.href.slice(window.location.href.indexOf('?') + 1).split('&');
    for (var i = 0; i < hashes.length; i++) {
        hash = hashes[i].split('=');
        vars[hash[0]] = hash[1];
    }
    return vars;
}

//Determina se é modo adaptativo 
AbnerUtils.prototype.showBigScreen = function (obj) {
    if (parseInt(obj.outerWidth()) >= 1024) {
        return true;
    } else {
        return false;
    }
}

AbnerUtils.prototype.getCheckedRadio = function (name) {
    if (name) {
        return $("input[type=radio][name=" + name + "]:checked").parent();
    } else {
        return $("input[type=radio]:checked").parent();
    }
}

AbnerUtils.prototype.getPhoneAsObject = function (phone) {

    var phoneObj = {
        ddi: "",
        ddd: "",
        phone: phone
    };

    phone = phone ? phone.replace(/\D+/g, '') : phone;

    if (phone && phone.length > 11) {
        phoneObj.ddi = phone.replace(/^(\d{2})(\d{2})(\d{8,9})$/g, "\$1");
        phoneObj.ddd = phone.replace(/^(\d{2})(\d{2})(\d{8,9})$/g, "\$2");
        phoneObj.phone = phone.replace(/^(\d{2})(\d{2})(\d{8,9})$/g, "\$3");
    } else if (phone && phone.length > 9) {
        phoneObj.ddd = phone.replace(/^(\d{2})(\d{8,9})$/g, "\$1");
        phoneObj.phone = phone.replace(/^(\d{2})(\d{8,9})$/g, "\$2");
    }

    return phoneObj;
}

AbnerUtils.prototype.formatPhone = function (phone) {

    var phoneReturn = phone.replace(/[^0-9]/g, '');

    if (phone && phone.length > 11) {
        phoneReturn = phone.replace(/^(\d{2})(\d{2})(\d{4,5})(\d{4})$/g, "\+$1 \($2) \$3 \$4");
    } else if (phone && phone.length > 9) {
        phoneReturn = phone.replace(/^(\d{2})(\d{4,5})(\d{4})$/g, "\($1) \$2 \$3");
    };

    return phoneReturn;
}

AbnerUtils.prototype.removeCpfCnpjFormat = function (valor, type) {

    if (valor) {
        //remove ponto e virgula
        valor = valor.replace(new RegExp(/[^\d]/g), "");

        if (type == "CNPJ") {
            var len = 14;
            var pad = "00000000000";
        } else if (type == "CPF") {
            var len = 11;
            var pad = "00000000000";
        } else {
            return "";
        }

        //transforma para numero
        valor = parseInt(valor);

        //se for maior que o valor defindo para len ele corta
        if (valor.length > len) {
            valor = valor.substring(0, len);
        }

        //Se ocorre algum erro, deixar vazio
        if (isNaN(valor)) {
            valor = "";

        } else {
            valor = pad.substring(0, pad.length - valor.length) + valor;
        }
    }
    return valor;
}

AbnerUtils.prototype.validarCNPJ = function (cnpj) {

    cnpj = cnpj.replace(/[^\d]+/g, '');
    
    if (cnpj == "0" ||
        cnpj == "00000000000000" ||
        cnpj == "11111111111111" ||
        cnpj == "22222222222222" ||
        cnpj == "33333333333333" ||
        cnpj == "44444444444444" ||
        cnpj == "55555555555555" ||
        cnpj == "66666666666666" ||
        cnpj == "77777777777777" ||
        cnpj == "88888888888888" ||
        cnpj == "99999999999999") {
        return false;
    }

    // Valida DVs
    var tamanho = cnpj.length - 2
    var numeros = cnpj.substring(0, tamanho);
    var digitos = cnpj.substring(tamanho);
    var soma = 0;
    var pos = tamanho - 7;
    var i = tamanho;

    for (i = tamanho; i >= 1; i--) {
        soma += numeros.charAt(tamanho - i) * pos--;
        if (pos < 2)
            pos = 9;
    }
    var resultado = soma % 11 < 2 ? 0 : 11 - soma % 11;
    if (resultado != digitos.charAt(0)) {
        return false;
    }

    tamanho = tamanho + 1;
    numeros = cnpj.substring(0, tamanho);
    soma = 0;
    pos = tamanho - 7;
    for (i = tamanho; i >= 1; i--) {
        soma += numeros.charAt(tamanho - i) * pos--;
        if (pos < 2)
            pos = 9;
    }

    resultado = soma % 11 < 2 ? 0 : 11 - soma % 11;

    if (resultado != digitos.charAt(1)) {
        return false;
    }

    return true;
}

//valida o CPF digitado
AbnerUtils.prototype.validarCPF = function(cpf) {

    var exp = /\.|\-/g
    cpf = cpf.toString().replace(exp, "");
    if (cpf.length < 11) {
        var pad = "00000000000";
        cpf = pad.substring(0, pad.length - cpf.length) + cpf;
    }

    if (cpf == "0" ||
        cpf == "00000000000" ||
        cpf == "11111111111" ||
        cpf == "22222222222" ||
        cpf == "33333333333" ||
        cpf == "44444444444" ||
        cpf == "55555555555" ||
        cpf == "66666666666" ||
        cpf == "77777777777" ||
        cpf == "88888888888" ||
        cpf == "99999999999") {
        return false;
    }

    var soma;
    var resto;
    soma = 0;

    for (var i = 1; i <= 9; i++) {
        soma = soma + parseInt(cpf.substring(i - 1, i)) * (11 - i);
    }

    resto = (soma * 10) % 11;

    if ((resto == 10) || (resto == 11)) {
        resto = 0;
    }
    if (resto != parseInt(cpf.substring(9, 10))) {
        return false;
    }

    soma = 0;
    for (var i = 1; i <= 10; i++) {
        soma = soma + parseInt(cpf.substring(i - 1, i)) * (12 - i);
    }
    resto = (soma * 10) % 11;

    if ((resto == 10) || (resto == 11)) {
        resto = 0;
    }
    if (resto != parseInt(cpf.substring(10, 11))) {
        return false;
    }
    return true;
}

AbnerUtils.prototype.validarEMAIL = function(email) {
    var emailValidation = email.match(/^[a-zA-Z0-9._-]+@[a-zA-Z0-9._-]+\.[a-zA-Z0-9._-]+$/);

    if (email == emailValidation) {
        return emailValidation;
    }
}

//Funcoes uteis de uso do JQUERY
window.addEventListener('WebComponentsReady', function () {
    document.querySelector("html").classList.add("html-page-loaded");
});

$(document).ready(function () {
    $.fn.setCursorPosition = function (pos) {
        this.each(function (index, elem) {
            if (elem.setSelectionRange) {
                elem.setSelectionRange(pos, pos);
            } else if (elem.createTextRange) {
                var range = elem.createTextRange();
                range.collapse(true);
                range.moveEnd('character', pos);
                range.moveStart('character', pos);
                range.select();
            }
        });
        return this;
    };

    $.fn.validate = function () {
        var change = null;
        var tag = new String();
        //Tratamento
        if ($(this).length > 0) {
            tag += $(this)[0].nodeName;
            if (tag) {
                tag = tag.toUpperCase();
            }
        } else {
            return null;
        }

        if ($(this).attr("onchange")) {
            change = $(this).attr("onchange");
            $(this).removeAttr("onchange");
        }

        //tira o foco de qualquer elemento
        document.activeElement.blur();
        $(window).focus();

        if (change != null) {
            $(this).attr("onchange", change);
        }

        //se ouver um erro validacao esta incorreta
        if ($(this).attr("error") && $(this).attr("error") != "") {
            return false;
        } else {
            return true;
        }
    };

    $.fn.setFocus = function () {
        if ($(this).length > 0) {
            $(this).find("input").focus();
        } else {
            return null;
        }
    }

    $.fn.removeFocus = function () {
        if (document.activeElement) {
            document.activeElement.blur();
        }
    }

    $.fn.getText = function () {
        var text = null;
        var tag = new String();
        //Tratamento
        if ($(this).length > 0) {
            tag += $(this)[0].nodeName;
            if (tag) {
                tag = tag.toUpperCase().startsWith("AB-INPUT") ? "AB-INPUT" : tag.toUpperCase();
                var tagsAceitas = ["AB-TEXT-READ-ONLY", "AB-TEXT-AREA-UNDERLINE", "AB-SELECT", "AB-INPUT", "AB-TEXT", "AB-RADIO"];
                if (tagsAceitas.indexOf(tag) == -1) {
                    return null;
                }
            }
        } else {
            return null;
        }

        if ($(this).length > 1) {
            var textArray = new Array();
            for (const radio of this) {
                textArray.push(radio.getText());
            }
            text = textArray;
        } else {
            text = this[0].getText();
        };

        return text;
    };

    $.fn.setText = function (text, cancel) {
        var tag = new String();

        //Tratamento
        if ($(this).length > 0) {
            tag += $(this)[0].nodeName;
            if (tag) {
                tag = tag.toUpperCase();
            }
        } else {
            return null;
        }

        if (tag == "AB-TEXT-READ-ONLY") {
            this[0].setText(text);

        } else if (tag.startsWith("AB-INPUT-DATE")) {
            this[0].setText(text);

        } else if (tag.startsWith("AB-INPUT")) {
            this[0].setText(text);

        } else if (tag.startsWith("AB-TEXT")) {
            this[0].setText(text);

        } else if (tag.startsWith("AB-RADIO")) {
            this[0].setText(text);

        } else if (tag == "AB-TEXT-AREA-UNDERLINE") {
            this[0].setText(text);

        } else if (tag.startsWith("AB-SELECT")) {
            if (cancel) {
                $(this).find("select").val(text);
            } else {
                $(this).find("select").val(text).change();
            }
        }

        //salva valor
        if (!tag.startsWith("AB-INPUT-CHECKBOX")) {
            $(this).attr("loaded-value", $(this).getText());
        }
    };


    //funcao para corrigir o data
    $.fn.getNumber = function () {
        var text = null;
        var tag = new String();
        //Tratamento
        if ($(this).length > 0) {
            tag += $(this)[0].nodeName;
            if (tag) {
                tag = tag.toUpperCase();
            }
        } else {
            return null;
        }

        if (tag == "AB-TEXT-READ-ONLY") {
            text = this[0].getText();

        } else if (tag.startsWith("AB-INPUT-CHECKBOX")) {
            text = this[0].getNumber();

        } else if (tag.startsWith("AB-INPUT-RADIO")) {
            text = this[0].getNumber();
            
        } else if (tag.startsWith("AB-INPUT-SWITCH")) {
            text = this[0].getNumber();

        } else if (tag.startsWith("AB-INPUT-TIME")) {
            text = $(this).find("input").val() + "00";

        } else if (tag.startsWith("AB-INPUT-NUMBER")) {
            text = $(this).find("input").val();
            text = text.replace(new RegExp(/[^\d]/g), "");

        } else if (tag.startsWith("AB-INPUT-DATE")) {
            if (window.isIOS || window.isAndroid) {
                text = $(this).find("input").val();
                text = text.substring(8, 10) + "" + text.substring(5, 7) + "" + text.substring(0, 4);
            } else {
                text = $(this).find("input").val();
            }

        } else if (tag.startsWith("AB-INPUT")) {
            text = $(this).find("input").val();

        } else if (tag.startsWith("AB-TEXT-AREA-UNDERLINE")) {
            text = $(this).find("textarea").val();

        } else if (tag.startsWith("AB-SELECT")) {
            text = parseInt($(this).getObject().valor);

        } else if (tag.startsWith("AB-QUESTION")) {
            text = $(this).attr("answer");
        }

        if (text && tag != "AB-SELECT-UNDERLINE") {
            text = text.replace(new RegExp(/[^\d\,]/g), "");
        }

        return text;
    };

    //funcao para corrigir o data
    $.fn.setNumber = function (text, cancel) {
        var tag = new String();
        //Tratamento
        if ($(this).length > 0) {
            tag += $(this)[0].nodeName;
            if (tag) {
                tag = tag.toUpperCase();
            }
        } else {
            return null;
        }

        if (text || text == 0) {
            //Necessario ser string para regex
            text += "";
            text = text.replace(new RegExp(/[^\d-\,]/g), "");

            if (tag == "AB-TEXT-READ-ONLY") {
                this[0].setText(text);

            } else if (tag.startsWith("AB-INPUT-CHECKBOX")) {
                this[0].setNumber(text);

                $(this).attr("loaded-value", $(this).attr("is-checked"));

            } else if (tag.startsWith("AB-INPUT-RADIO")) {
                this[0].setNumber(text);

            } else if (tag.startsWith("AB-INPUT-SWITCH")) {
                this[0].setNumber(text);

            } else if (tag.startsWith("AB-INPUT-DATE")) {
                this[0].setText(text);

            } else if (tag.startsWith("AB-INPUT")) {
                this[0].setNumber(text);

            } else if (tag.startsWith("AB-SELECT")) {
                if (cancel) {
                    $(this[0].select).val(text);
                } else {
                    $(this[0].select).val(text).change();
                }
            }

            //salva valor
            if (!tag.startsWith("AB-INPUT-CHECKBOX")) {
                $(this).attr("loaded-value", $(this).getText());
            }
        }
    };

    $.fn.setOldValue = function () {
        $(this).setText($(this).attr("loaded-value"));
    };

    $.fn.isChanged = function (val) {
        var loadedValue = $(this).attr("loaded-value");
        var currentValue = $(this).getText();

        if (loadedValue || currentValue) {
            if (loadedValue !== currentValue) {
                return true;
            } else {
                return false;
            }
        } else {
            return false;
        }
    }

    $.fn.setObject = function (val) {
        var tag = $(this)[0].nodeName;
        if (tag.startsWith("AB-SELECT")) {
            $(this).find("select").val(val).change();
        }
    }

    $.fn.getObject = function () {
        var bean = new Object();

        if ((this)[0]) {
            var tag = $(this)[0].nodeName;

            if (tag.startsWith("AB-SELECT")) {
                bean.nome = $(this).find("select option:selected").text();
                bean.valor = $(this).find("select option:selected").attr("value");
            }
        }

        return bean;
    }


    //Avisar nossos componentes quando teve uma alteracao
    var origAppend = $.fn.append;
    $.fn.append = function () {
        if ($(this).hasClass("ab-container-content") && arguments[0].hasClass("ab-block")) {
            return false;
        } else {
            return origAppend.apply(this, arguments).trigger("append");
        }
    };

    //função para retornar se o campo esrá com erro ou não
    $.fn.hasError = function () {
        if ($(this).attr("error")) {
            return true;
        } else {
            return false;
        }
    }
});


//função para arrumar bug no iOS 8
if (!String.prototype.startsWith) {
    String.prototype.startsWith = function (searchString, position) {
        position = position || 0;
        return this.indexOf(searchString, position) === position;
    };
}

String.prototype.toUpperOnlyFirstLetter = function () {
    var str = this;

    var wordMap = {
        "rg": "RG",
        "cpf": "CPF",
        "cnpj": "CNPJ",
        "rne": "RNE",
        "cep": "CEP",
        "cnh": "CNH",
        "s.a.": "S.A."
    };

    if (str && str.length == 0) {
        return "";
    } else if (str && str.length == 1) {
        return str.toUpperCase()
    } else if (str && str.length > 1) {
        str = str.substr(0, 1).toUpperCase() + str.substr(1).toLowerCase();
        return str = str.replace(/\b(rg|cpf|cnpj|rne|cep|cnh)\b|s\.a\./gi, function (word) {
            return wordMap[word.toLowerCase()];
        });
    } else {
        return "";
    }
}

String.prototype.toCamelCase = function () {
    var str = this.toLowerCase();

    var wordsArray = ["de", "sem", "o", "do", "da"];

    var words = str.split(" ");

    var fullString = new String();

    for (var i = 0; i < words.length; i++) {
        if (wordsArray.indexOf(words[i]) == -1 && words[i].length > 1) {
            words[i] = words[i].toUpperOnlyFirstLetter();
        };
    };

    fullString = words.join(" ")

    return fullString;
}

String.prototype.formatPercent = function(decimals, integers) {
    var tmp = this;
    var dec = "1";
    var formatDecimal = 0;
    var negativeCheck = false;

    if (tmp.substring(0, 1) == "-") {
        negativeCheck = true;
        tmp = tmp.substring(1, tmp.length);
    };

    if (decimals) {
        dec = dec.rpad("0", parseInt(decimals) + 1);
        formatDecimal = parseInt(decimals);
    }
    dec = parseInt(dec);

    if ((tmp && parseInt(tmp) == 0) || tmp == "" || tmp == undefined || isNaN(parseInt(tmp))) {
        tmp = 0;
    } else {
        tmp = parseFloat(tmp) / dec;
    }

    if (negativeCheck) {
        tmp = tmp * -1;
    }

    var option = {
        minimumFractionDigits: formatDecimal,
        maximumFractionDigits: formatDecimal
    };

    tmp = new Intl.NumberFormat('pt-BR', option).format(tmp);

    return tmp;
}

String.prototype.formatCurrency = function () {
    var tmp = this;
    var negativeCheck = false;

    if (tmp.substring(0, 1) == "-") {
        negativeCheck = true;
        tmp = tmp.substring(1, tmp.length);
    };

    //remove zeros a esquerda
    if (tmp) {
        // tmp = parseInt(tmp) + "";
        tmp = tmp.replace(/^0+/, '');
    }

    //Qualquer coisa diferente de um numero valido retorna 0,00
    if ((tmp && parseInt(tmp) == 0) || tmp == "" || tmp == undefined || isNaN(parseInt(tmp))) {
        return "0,00";
    }

    //Verifica se existem somente decimais, e acrescenta um zero na frente
    if (tmp && tmp.length <= 2) {
        tmp = tmp.lpad("0", 3);
    }

    //se o tamanho for
    //coloca as casas decimais
    tmp = tmp.replace(/([0-9]{2})$/g, ",$1");

    //se tiver milhar coloca ponto
    if (tmp.length > 6) {
        tmp = tmp.replace(/\B(?=(\d{3})+(?!\d))/g, ".");
    }

    if (negativeCheck == true) {
        tmp = "-" + tmp;
    }

    return tmp;
}

String.prototype.formatDate = function (options) {
    var dia = "";
    var mes = "";
    var ano = "";
    var itens = "";
    var dataFormatada = null;
    var str = this;

    if (options) {
        //options.date != "" && options.date != 0 && options.date != null
        options.date = str;

        switch (options.srcFormat) {
            case 'ddmmyyyy':
                ano = options.date.substring(4, 8);
                mes = options.date.substring(2, 4);
                dia = options.date.substring(0, 2);
                break;

            case 'yyyymmdd':
                ano = options.date.substring(0, 4);
                mes = options.date.substring(4, 6);
                dia = options.date.substring(6, 8);
                break;

            case 'dd.mm.yyyy':
                itens = options.date.split(".");
                ano = itens[2];
                mes = itens[1];
                dia = itens[0];
                break;

            case 'dd/mm/yyyy':
                itens = options.date.split("/");
                ano = itens[2];
                mes = itens[1];
                dia = itens[0];
                break;

            case 'yyyy.mm.dd':
                itens = options.date.split(".");
                ano = itens[2];
                mes = itens[1];
                dia = itens[0];
                break;

            case 'dd-mm-yyyy':
                itens = options.date.split("-");
                ano = itens[2];
                mes = itens[1];
                dia = itens[0];
                break;

            case 'yyyy-mm-dd':
                itens = options.date.split("-");
                ano = itens[0];
                mes = itens[1];
                dia = itens[2];
                break;

            case 'yyyymm':
                ano = options.date.substring(0, 4);
                mes = options.date.substring(4, 6);
                break;

            default:
                console.log("Data inválida");
        }

        switch (options.targetFormat) {
            case 'dd/mm/yyyy':
                dataFormatada = dia + '/' + mes + '/' + ano;
                break;

            case 'yyyy/mm/dd':
                dataFormatada = ano + '/' + mes + '/' + dia;
                break;

            case 'dd.mm.yyyy':
                dataFormatada = dia + '.' + mes + '.' + ano;
                break;

            case 'yyyy.mm.dd':
                dataFormatada = ano + '.' + mes + '.' + dia;
                break;

            case 'dd-mm-yyyy':
                dataFormatada = dia + '-' + mes + '-' + ano;
                break;

            case 'yyyy-mm-dd':
                dataFormatada = ano + '-' + mes + '-' + dia;
                break;

            case 'mm/yyyy':
                dataFormatada = mes + '/' + ano;
                break;

            case 'mmyy':
                dataFormatada = mes + "" + ano.substring(2, 4);
                break;

            case 'ddmmyyyy':
                dataFormatada = dia + mes + ano;
                break;

            case 'yyyymmdd':
                dataFormatada = ano + mes + dia;
                break;

            default:
                console.log("erro");
        }
    }
    return dataFormatada;
}

String.prototype.formatTime = function (options) {
    var hora = "";
    var min = "";
    var seg = "";
    var itens = "";
    var horaFormatada = null;
    var str = this;

    if (options) {
        options.time = str;

        switch (options.srcFormat) {
            case 'hhmmss':
                hora = options.time.substring(0, 2);
                min = options.time.substring(2, 4);
                seg = options.time.substring(4, 6);
                break;

            case 'hh:mm:ss':
                itens = options.time.split(":");
                hora = itens[0];
                min = itens[1];
                seg = itens[2];
                break;

            case 'hh.mm.ss':
                itens = options.time.split(".");
                hora = itens[0];
                min = itens[1];
                seg = itens[2];
                break;

            case 'hh-mm-ss':
                itens = options.time.split("-");
                hora = itens[0];
                min = itens[1];
                seg = itens[2];
                break;

            default:
                console.log("Hora inválida");
        }

        switch (options.targetFormat) {
            case 'hh:mm:ss':
                horaFormatada = hora + ':' + min + ':' + seg;
                break;

            case 'hh.mm.ss':
                horaFormatada = hora + '.' + min + '.' + seg;
                break;

            case 'hh-mm-ss':
                horaFormatada = hora + '-' + min + '-' + seg;
                break;

            case 'hhmmss':
                horaFormatada = hora + min + seg;
                break;

            default:
                console.log("erro");
        }
    }
    return horaFormatada;
}

String.prototype.formatCpf = function () {
    var cpf = this.lpad("0", 11);
    return cpf.replace(/(\d{3})(\d{3})(\d{3})(\d{2})/g, "\$1.\$2.\$3\-\$4");
}

String.prototype.formatCnpj = function () {
    var cpf = this.lpad("0", 14);
    return cpf.replace(/(\d{2})(\d{3})(\d{3})(\d{4})(\d{2})/g, "\$1.\$2.\$3\/\$4\-$5");
}


String.prototype.dateDiff = function (srcFormat, targetData, type) {

    var dataIni = new Date(this.formatDate({
        "srcFormat": srcFormat,
        "targetFormat": "yyyy/mm/dd"
    }));
    var dataFim = new Date(targetData.formatDate({
        "srcFormat": srcFormat,
        "targetFormat": "yyyy/mm/dd"
    }));

    if (type == "dia") {
        var difDias = Math.abs(dataFim.getTime() - dataIni.getTime());
        var numDias = Math.ceil(difDias / (1000 * 3600 * 24));
        return numDias;
    } else if (type == "mes") {
        var difMeses = Math.abs(dataFim.getTime() - dataIni.getTime());
        var numMeses = Math.ceil(difMeses / (1000 * 3600 * 24 * 30) - 1);
        return numMeses;
    } else if (type == 'ano') {
        var difMeses = Math.abs(dataFim.getTime() - dataIni.getTime());
        var numMeses = Math.ceil(difMeses / (1000 * 3600 * 24 * 30) - 1);
        return Math.floor(numMeses / 12);
    }
}

String.prototype.plusDays = function (srcFormat, days) {
    var dataFormatada = this.formatDate({
        "srcFormat": srcFormat,
        "targetFormat": "yyyy/mm/dd"
    });
    var dataGerada = new Date(dataFormatada);
    var dataFinal = "";
    dataGerada.setDate(dataGerada.getDate() + days);
    var mes = new String(dataGerada.getMonth() + 1).lpad('0', 2);
    var dia = new String(dataGerada.getDate()).lpad('0', 2);
    dataFinal = dia + '/' + mes + '/' + dataGerada.getFullYear();
    return dataFinal;
}

String.prototype.minusDays = function (srcFormat, days) {
    var dataFormatada = this.formatDate({
        "srcFormat": srcFormat,
        "targetFormat": "yyyy/mm/dd"
    });
    var dataGerada = new Date(dataFormatada);
    var dataFinal = "";
    dataGerada.setDate(dataGerada.getDate() - days);
    var mes = new String(dataGerada.getMonth() + 1).lpad('0', 2);
    var dia = new String(dataGerada.getDate()).lpad('0', 2);
    dataFinal = dia + '/' + mes + '/' + dataGerada.getFullYear();
    return dataFinal;
}

String.prototype.convertToNumber = function () {
    var codeString = this.substring(1, 12);
    var letter = this.substring(0, 1).toLowerCase();
    return letter.charCodeAt(0) - 96 + codeString;
}

String.prototype.lpad = function (padString, length) {
    var str = this;
    while (str.length < length)
        str = padString + str;
    return str;
}

String.prototype.getSigla = function () {
    var sigla = "";
    var name = this;

    if (name) {
        var userName = name.replace(new RegExp(/[-]/g), "");
        userName = userName.replace(new RegExp(/[\s]+/g), " ").trim();
        userName = userName.split(" ");
        var firstName = userName[0];
        var lastName = userName[userName.length - 1];
        sigla = firstName[0] + lastName[0];
    }

    return sigla;
}

String.prototype.rpad = function (padString, length) {
    var str = this;
    while (str.length < length)
        str = str + padString;
    return str;
}

String.prototype.trim = function () {
    return this.replace(/^\s+|\s+$/g, "");
}

//trimming space from left side of the string
String.prototype.ltrim = function () {
    return this.replace(/^\s+/, "");
}

//trimming space from right side of the string
String.prototype.rtrim = function () {
    return this.replace(/\s+$/, "");
}
"use strict";

$(document).ready(function() {
    $.fn.block = function(options) {
        var tag = "";
        var onlyLoad = true;

        //Tratamento
        if ($(this).length > 0) {
            tag += $(this)[0].nodeName;
            if (tag) {
                tag = tag.toUpperCase();
            }
        } else {
            return null;
        }

        //se existir tela remove
        $(this).unblock();

        //Gera ID
        var id = randomNumber();
        $(this).attr("blockID", id);

        var divBlock = $("<div>");
        divBlock.on("tap", function(e) {
            e.preventDefault();
            e.stopPropagation();
        });
        divBlock.attr("id", id);

        //coloca preto ou branco
        if (options && options.transparency == false) {
            divBlock.addClass("ab-block-full-black");
        } else if (tag == "AB-PAGE" || tag == "BODY") {
            divBlock.addClass("ab-block-black");
        } else {
            divBlock.addClass("ab-block-white");
        }


        $(this).append(divBlock);
        

        var divWrapper = $("<div>");
        divWrapper.addClass("ab-block-wrapper");
        divWrapper.appendTo(divBlock);

        if ((options && options.showLoading && options.showLoading == true) || !options || options.showLoading == undefined) {
            var divLoading = $("<div>");

            if (onlyLoad) {
                divLoading.addClass("ab-block-loading-center");
            } else {
                divLoading.addClass("ab-block-loading");
            }

            divLoading.appendTo(divWrapper);
        }
    };

    //funcao para desbloquear a tela/componente
    $.fn.unblock = function() {

        //remove determinado block
        $("#" + $(this).attr("blockID")).remove();

        //Tratamento
        var tag = "";
        if ($(this).length > 0) {
            tag += $(this)[0].nodeName;
            if (tag) {
                tag = tag.toUpperCase();
            }
        } else {
            return null;
        }
    };
});
"use strict";

$(document).ready(function () {
    $(window).on("resize", function () {
        $("ab-page").find("ab-box").each(function () {
            if ($(this).attr("width")) {
                $(this).css("width", $(this).attr("width"));
            } else {
                $(this).css("width", "100%");
            };
        });
    });
});

class AbBox extends HTMLElement {

    constructor() {
        super();

        this.boxHeader = document.createElement("header");
        this.boxHeaderText = document.createElement("p");
        this.divFooter = document.createElement("footer");

        this.mainClass = "ab-box";
        
    }

    _render() {
        var id = generateID();
        if (this.hasAttribute("id")) {
            //description: Identificador único do objeto, com prefixo "box" | Alfanumérico | Não | Normal |
            id = this.getAttribute("id");
        } else {
            this.setAttribute("id", id);
        }

        $(this).addClass("ab-box");

       // style.innerText = " .ab-box[status='analise'] { --border-status: 8px solid var(--box-status-analise); } .ab-box[status='ativo'] { --border-status: 8px solid var(--box-status-ativo); } .ab-box[status='inativo'] { --border-status: 8px solid var(--box-status-inativo); } .ab-box[status='cancelado'] { --border-status: 8px solid var(--box-status-cancelado); } :host(.ab-box) { box-sizing: border-box; display: inline-block; overflow: hidden; float: left; margin: 8px; width: -webkit-calc(100% - 16px); width: -moz-calc(100% - 16px); width: -o-calc(100% - 16px); width: calc(100% - 16px); border-radius: 5px; border-left: var(--border-status); box-shadow: var(--shadow-lv2); } .ab-box-content { box-sizing: border-box; padding: 8px; display: var(--boxDisp); justify-content: space-between; align-items: center; background-color: var(--bg-components); height: initial; overflow: hidden; float: var(--boxFloat); width: 100%; position: relative; } :host(.ab-box-expandable) .ab-box-content { padding: 8px; } .ab-box-footer { float: left; height: 40px; width: 100%; background-size: 20px; background-repeat: no-repeat; background-position: center; bottom: 0px; left: 8px; background-color: var(--bg-components); cursor: pointer; } :host(.ab-box-closed) :host(.ab-box-opened) .ab-box-content { max-height: 9000% !important; } :host(.ab-box-opened) .ab-box-form .ab-box-content { max-height: 100px } .ab-box-content::slotted(label) { font-size: 13px; font-family: 'ablinkmedium'; line-height: 18px; color: var(--cor-pri-text); display: block; width: 100%; padding: 8px; box-sizing: border-box; float: left; } .ab-box-title { box-sizing: border-box; display: inline-block; background-color: var(--bg-components); height: 50px; float: left; width: 100%; } .ab-box-title-text { line-height: 50px; box-sizing: border-box; font-size: 16px; font-family: 'ablinksemiboldregular'; font-weight: normal; color: var(--cor-titulo); float: left; padding-left: 8px; margin: 0px; } .ab-box-div-buttons { float: left; display: table; width: 100%; table-layout: fixed; vertical-align: top; background-color: var(--bg-components); margin-top: -5px; padding: 0px 16px 16px 16px; box-sizing: border-box; z-index: 1; position: relative; } br { line-height: 20px; }";

        if (this.getAttribute("theme") == 'flex'){
            $(this).addClass("ab-box__flex");            
        } else if (this.getAttribute("theme") == 'ativo'){
            $(this).addClass("ab-box__ativo");            
        } else if (this.getAttribute("theme") == 'inativo'){
            $(this).addClass("ab-box__inativo");
        } else if (this.getAttribute("theme") == 'dark'){
            $(this).addClass("ab-box__dark");
        }



        //Classe base
        this.classList.add(this.mainClass);

        //Coloca titulo
        this.boxHeader.setAttribute("id", id + "_div_title");
        this.boxHeader.classList.add("ab-box-title");


        this.boxHeader.appendChild(this.boxHeaderText);
        this.boxHeaderText.setAttribute("id", id + "_div_text");
        this.boxHeaderText.classList.add("ab-box-title-text");

        if (this.hasAttribute("title")) {
            //description: Coloca um título | Alfanumérico | não |não|
            this.boxHeaderText.innerText = this.getAttribute("title");
        } else {
            this.boxHeader.style.display = "none";
        }


        if (this.hasAttribute("max-width")) {
            //description: Define o tamanho máximo | Tamanho em pixel | não |100%|
            this.style.maxWidth = this.getAttribute("max-width");
        }

        if (this.hasAttribute("width")) {
            //description: Ativa ou desativa o max-width | true ou false| não|false|
            this.style.width = this.getAttribute("max-width");
        }

        //div para fazer a seta que expande o box
        this.divFooter.setAttribute("id", id + "_footer");
        this.divFooter.classList.add("ab-box-footer");

        //verifica se existe a altura inicial, considerado para expandir
        if (this.hasAttribute("initial-height")) {
            //description: Define a altura inicial do componente quando precisa ser expandido| 100px, 200px, 300px| não|não|

            //adicionando classes para considerar o footer
            this.classList.add("ab-box-expandable");

            if (!this.hasAttribute("is-opened")) {
                this.classList.add("ab-box-closed");
            }
        } else {
            this.divFooter.style.display = "none";
        }

        if (this.getAttribute("visibility") == "hidden") {
            //values: hidden
            //description: Se o parâmetro estiver presente com o valor "hidden", esconde o objeto | hidden | não| não|
            this.style.display = "none";
        }

        if (this.hasAttribute("width-on-bigscreen")) {
            //description: Define uma largura para quando estiver em tela grande (tablets, pc) | Numérico | não| não|
            if ($("ab-page").attr("fullscreen") == "true"){
                this.style.width = this.getAttribute("width-on-bigscreen");
            }
        }

        if (this.hasAttribute("status")) {
            this.boxHeader.setAttribute("status", this.getAttribute("status"));
            this.divFooter.setAttribute("status", this.getAttribute("status"));
        }

        //for legacy substituir todos os h1 dos box por h3
        for (const element of this.children) {
            if (element.tagName == "H1") {
                element.outerHTML = element.outerHTML.replace(/h1/g,"h3");
            }            
        }
    }

    _addEvent() {
        var _this = this;

        $(this.divFooter).on("tap", function (e) {
            e.preventDefault();
            e.stopPropagation();

            if (_this.getAttribute("is-opened") == "true") {
                //values: true;false
                //description: Se possuir initial-height, inicia aberto ou fechado | true ou false | não | false|
                _this.setAttribute("is-opened", "false");
            } else {
                _this.setAttribute("is-opened", "true");
            }
        });

    }


    connectedCallback() {
        if (!this.classList.contains("ab-box")) {
            this._render();
            this._addEvent();
        }
    }

    static get observedAttributes() {
        return ["is-opened", "max-width", "title", "theme", "initial-height", "id", "visibility", "width-on-bigscreen", "status"];
    }

    attributeChangedCallback(attrName, oldVal, newVal) {
        switch (attrName) {
            case "is-opened":
                if (newVal == "true") {
                    this.classList.add("ab-box-opened");
                    this.classList.remove("ab-box-closed");
                } else if (newVal == "false") {
                    this.classList.add("ab-box-closed");
                    this.classList.remove("ab-box-opened");
                }
                break;
    
            case "max-width":
                if (newVal) {
                    this.style.maxWidth = newVal;
                } else {
                    this.style.maxWidth = "";
                }
                break;
    
            case "title":
    
                if (newVal) {
                    this.boxHeader.style.display = "block";
                    this.boxHeaderText.innerText = newVal;
                } else {
                    this.boxHeader.style.display = "none";
                    this.boxHeaderText.innerText = "";
                }
                break;
    
            case "theme":
                if (newVal) {
                    this.boxHeader.classList.add("ab-box-title-" + newVal);
                    this.divFooter.classList.add("ab-box-footer-" + newVal);
                } else {
                    this.boxHeader.classList.remove("ab-box-title-" + oldVal);
                    this.divFooter.classList.remove("ab-box-footer-" + newVal);
                }
                break;
    
            case "initial-height":
                //adiciona a altura inicial na altura do objeto
                //seta Max height
                if (newVal) {
                    this.classList.add("ab-box-expandable");
                    this.divFooter.style.display = "block";
                } else {
                    this.classList.remove("ab-box-expandable");
                    this.divFooter.style.display = "none";
                }
    
                //Box aberto ou fechado
                if (this.getAttribute("is-opened") == "false" || !this.hasAttribute("is-opened")) {
                    this.classList.add("ab-box-closed");
                } else {
                    this.classList.remove("ab-box-closed");
                }
                break;
    
            case "id":
                //muda ids
                this.boxHeader.setAttribute("id", newVal + "_div_title");
                this.boxHeaderText.setAttribute("id", newVal + "_div_text");
                this.divFooter.setAttribute("id", newVal + "_footer");
                break;
    
            case "visibility":
                if (newVal == "show") {
                    this.style.display = "inline-block";
                } else if (newVal == "hidden") {
                    this.style.display = "none";
                }
                break;
    
            case "width-on-bigscreen":
                if ($("ab-page").attr("fullscreen") == "true"){
                    this.style.width = newVal;
                }
                break;

            case "status":
                this.boxHeader.setAttribute("status", newVal);
                this.divFooter.setAttribute("status", newVal);
                break;
        
            default:
                break;
        }
    }


}
customElements.define('ab-box', AbBox);
"use strict";

$(document).ready(function () {
    $(window).on("resize", function () {
        $("ab-page").find("ab-button").each(function () {
            $(this).css("max-width", "100%");
            if ($(this).attr("width")) {
                $(this).css("width", $(this).attr("width"));
            }
        });
    });
});

class AbButton extends HTMLElement {

    constructor() {
        super();

        this.button = document.createElement("button");
        this.span = document.createElement("span");
        this.img = document.createElement("div");
        this.blocker = document.createElement("div");

        this.mainClass = "ab-button";

    }

    _render() {
        //coloca classe
        this.classList.add(this.mainClass);

        var id = generateID();
        if (this.hasAttribute("id")) {
            //description: Identificador único do objeto, com prefixo "btn"| Alfanumérico |não| randômico|
            id = this.getAttribute("id");
        } else {
            this.setAttribute("id", id);
        }

        //Coloca os atributos no objeto
        if (this.hasAttribute("width")) {
            //description: Largura do botão| Alfanumérico| não| auto |
            this.style.width = this.getAttribute("width");
        }

        // if (this.hasAttribute("height")) {
        //     //description: Altura do botão| Alfanumérico| não| auto |
        //     this.style.height = this.getAttribute("height");
        // }

        if (this.getAttribute("last-button") == "true") {
            //description: Ultimo botão da página | Boolean | não | false |
            this.classList.add("ab-button-last-button");
        }

        //verifica width-on-bigscreen
        if ($("ab-page").attr("fullscreen") == "true") {
            if (this.hasAttribute("width-on-bigscreen")) {
                //description: Largura do componente em telas maiores| % ou px| não| |
                this.style.width = this.getAttribute("width-on-bigscreen");
            } else {
                this.style.maxWidth = "340px";
            }
        }

        //Cria botao
        this.button.setAttribute("id", id + "btn_button");
        this.appendChild(this.button);

        // adiciona o texto inserido no objeto para o span criado
        this.span.setAttribute("id", id + "btn_span");

        if (this.hasAttribute("label")) {
            //description: Colocar um texto no botão| Alfanumérico| sim| vazio|
            this.span.innerText = this.getAttribute("label").toUpperOnlyFirstLetter();
        }
        this.button.appendChild(this.span);

        // adiciona a imagem inserida no objeto no background de uma div
        this.img.setAttribute("div-image", "true");
        this.img.setAttribute("id", id + "btn_img");
        this.button.insertAdjacentElement("afterbegin", this.img);
        if (this.hasAttribute("icon") || this.hasAttribute("icon-class")) {
            this.img.style.backgroundImage = "url(" + this.getAttribute("icon") + ")";
            if (this.hasAttribute("icon-class")) {
                this.img.classList.add(this.getAttribute("icon-class"));
            }
        } else {
            this.img.style.display = "none";
        }

        // verifica se o botão é somente para mostrar o ícone e adiciona a classe
        if (this.getAttribute("icon-button") == "true") {
            //values: true;false
            //description: Trava o botão para ter somente o ícone| true ou false| não| false|
            this.classList.add("ab-button-img");
        }

        // verifica se tem o tamanho do icone e adiciona no tamanho do background
        if (this.hasAttribute("icon-size")) {
            //description: Altera o tamanho do icone| Número em px| não| |
            this.img.style.backgroundSize = this.getAttribute("icon-size");
        }

        // verifica se tem o tamanho do espaço do ícone e define a largura da div
        if (this.hasAttribute("icon-space-width")) {
            //description: Espaçamento do ícone com o texto| Número em px| não| |
            this.img.style.width = this.getAttribute("icon-space-width");
        }

        //Coloca cor no botao
        if (this.hasAttribute("theme")) {
            //values: normal;light;keyboard;keyboard-ok;dark-rounded;red-rounded;dark;vk
            //description: Altera a cor do componente| [[#Temas | Ver temas]]| não | vazio|
            this.classList.add("ab-button-" + this.getAttribute("theme"));
        } else if (this.getAttribute("theme") == "ab-button-keyboard") {
            this.classList.add("ab-button-keyboard");
        } else {
            this.classList.add("ab-button-normal");
        }

        if (this.getAttribute("position") == "center") {
            //values: center;right;left
            //description: Posição do botão| Center, right ou left| não| center|
            if (abner.utils.showBigScreen(top.$("body")) == true) {
                this.classList.add("ab-button-center-big");
            } else {
                this.classList.add("ab-button-center");
            }
        } else if (this.getAttribute("position") == "left") {
            //não faz nada
        } else if (this.getAttribute("position") == "right") {
            this.style.float = this.getAttribute("position");
        }

        //verifica se tem max width
        if (this.hasAttribute("max-width")) {
            //description: Largura máxima do botão| Número em px| não| |
            this.style.maxWidth = this.getAttribute("max-width");
        }

        this.blocker.classList.add("ab-button-block");
        this.blocker.setAttribute("id", id + "btn_iblocker");
        this.appendChild(this.blocker);

        if (this.getAttribute("is-disabled") == "true") {
            //values: true;false
            this.button.setAttribute("disabled", "disabled");
            this.blocker.style.display = "block";
        }

        if (this.getAttribute("is-blocked") == "true") {
            //values: true;false
            this.blocker.style.display = "block";
        }

        if (this.getAttribute("visibility") == "hidden") {
            //values: hidden;show
            this.style.display = "none";
        }

        //Mesmo comportamento porém com outro nome de atributo, necessário ajustar todos projetos que usam o de cima
        if (this.getAttribute("visible") == "false") {
            //values: true;false
            this.style.display = "none";
        }

        //Limpa variaveis
        id = null;
    }

    _addEvent() {
        var button = $(this.button);
        var _this = this;

        // altera o ícone do botão quando o botão é apertado e se é passado o atributo icon-active
        button.on("touchstart mousedown", function (e) {

            //Proibe o clique em dois botões ao mesmo tempo
            if (e && e.originalEvent && e.originalEvent.touches && e.originalEvent.touches.length > 1) {
                return;
            };

            //tira o foco de qualquer elemento
            document.activeElement.blur();
            $(window).focus();

            if (_this.getAttribute("is-disabled") == "false" || !_this.hasAttribute("is-disabled")) {
                //se tiver especificado icon-active adiciona no lugar do normal quando o evento inicia
                if (_this.hasAttribute("icon-active")) {
                    //description: Caminho do ícone que aparecerá quando o botão for ativado. | Alfanumérico| não| vazio|
                    if (_this.hasAttribute("icon-active")) {
                        _this.img.style.backgroundImage = "url(" + _this.getAttribute("icon-active") + ")";
                    }
                }
                // se tiver tema adiciona o tema no objeto
                if (_this.hasAttribute("theme")) {
                    _this.classList.add("ab-button-" + _this.getAttribute("theme") + "-active");
                } else {
                    _this.classList.add("ab-button-normal-active");
                };
            };
        });

        // altera o ícone do botão quando o botão é solto e se é passado o atributo icon-active
        button.on("mouseup touchend", function (e) {
            e.preventDefault();

            //tira o foco de qualquer elemento
            document.activeElement.blur();
            $(window).focus();

            if (_this.getAttribute("is-disabled") == "false" || !_this.hasAttribute("is-disabled")) {
                //retorna o icone para o normal quando o evento termina
                if (_this.hasAttribute("icon-active")) {
                    if (_this.hasAttribute("icon")) {
                        _this.img.style.backgroundImage = "url(" + _this.getAttribute("icon") + ")";
                    }
                }
                //retira o tema adicionado
                if (_this.hasAttribute("theme")) {
                    _this.classList.remove("ab-button-" + _this.getAttribute("theme") + "-active");
                } else {
                    _this.classList.remove("ab-button-normal-active");
                }
            }
        });

        //ação quando o mouse ou o touch deixar a área do objeto botão
        button.on("mouseleave touchleave", function (e) {
            e.preventDefault();

            if (_this.getAttribute("is-disabled") == "false" || !_this.hasAttribute("is-disabled")) {
                //retorna o icone para o normal quando o evento termina
                if (_this.hasAttribute("icon-active")) {
                    if (_this.hasAttribute("icon")) {
                        _this.img.style.backgroundImage = "url(" + iconActive + ")";
                    }
                }
                //retira o tema adicionado
                if (_this.hasAttribute("theme")) {
                    _this.classList.remove("ab-button-" + _this.getAttribute("theme") + "-active");
                } else {
                    _this.classList.remove("ab-button-normal-active");
                }
            }
        });

        $(this.blocker).on("tap", function (e) {
            e.preventDefault();
            e.stopPropagation();

            return false;
        });


    }

    connectedCallback() {
        if (!this.classList.contains(this.mainClass)) {
            /*this.shadowDom = this.attachShadow({ mode: 'open' }); */
            this._render();
            this._addEvent();
        }
    }

    static get observedAttributes() {
        return ["is-disabled", "label", "theme", "icon", "icon-class", "width", "icon-button", "icon-size", "icon-space-width", "visibility", "visible", "position", "width-on-bigscreen", "id", "max-width", "is-blocked"];
    }

    attributeChangedCallback(attrName, oldVal, newVal) {

        switch (attrName) {
            case "is-disabled":
                //Quando is-disable = true, desabilita o botão
                if (newVal == "true") {
                    this.button.setAttribute("disabled", "disabled");
                    this.blocker.style.display = "block";
                } else {
                    //Se o novo valor não habilitar o disable, ele retira as classes de active e remove o disable do botão
                    if (this.hasAttribute("theme")) {
                        this.classList.remove("ab-button-" + this.getAttribute("theme") + "-active");
                    } else {
                        this.classList.remove("ab-button-normal-active");
                    }

                    this.button.removeAttribute("disabled");
                    this.blocker.style.display = "none";
                }

                break;

            case "label":
                this.span.innerText = newVal.toUpperOnlyFirstLetter();
                break;

            case "theme":
                this.classList.remove("ab-button-" + oldVal);
                this.classList.remove("ab-button-normal");
                this.classList.add("ab-button-" + newVal);
                break;

            case "icon":
                this.img.style.display = "inline-block";
                this.img.style.backgroundImage = "url(" + newVal + ")";
                break;

            case "icon-class":
                this.img.style.display = "inline-block";
                this.img.classList.add(newVal);
                break;

            case "width":
                this.style.width = newVal;
                break;

            case "icon-button":
                if (newVal == "true") {
                    this.classList.add("ab-button-img");
                } else {
                    this.classList.remove("ab-button-img");
                }
                break;

            case "icon-size":
                this.img.style.backgroundSize = newVal;
                break;

            case "icon-space-width":
                this.img.style.width = newVal;
                break;

            case "visibility":
                if (newVal == "show") {
                    this.style.display = "table";
                } else if (newVal == "hidden") {
                    this.style.display = "none";
                }
                break;

            case "visible":
                if (newVal == "true") {
                    this.style.display = "table";
                } else if (newVal == "false") {
                    this.style.display = "none";
                }
                break;

            case "position":
                if (newVal == "center") {
                    if (abner.utils.showBigScreen(top.$("body")) == true) {
                        this.classList.add("ab-button-center-big");
                    } else {
                        this.classList.add("ab-button-center");
                    }
                } else if (newVal == "right") {
                    this.style.float = newVal;
                }
                break;

            case "width-on-bigscreen":
                if (abner.utils.showBigScreen(top.$("body"))) {
                    this.style.width = newVal;
                }
                break;

            case "id":
                this.img.setAttribute("id", newVal + "btn_img");
                this.button.setAttribute("id", newVal + "btn_button");
                this.span.setAttribute("id", newVal + "btn_span");
                this.blocker.setAttribute("id", newVal + "btn_iblocker");
                break;

            case "max-width":
                this.style.maxWidth = newVal;
                break;

            case "is-blocked":
                //Trata a alteração do atributo is-disable
                //Quando is-disable = true, desabilita o botão
                if (newVal == "true") {
                    this.blocker.style.display = "block";
                } else {
                    //Se o novo valor não habilitar o disable, ele retira as classes de active e remove o disable do botão
                    if (this.hasAttribute("theme")) {
                        this.classList.remove("ab-button-" + this.getAttribute("theme") + "-active");
                    } else {
                        this.classList.remove("ab-button-normal-active");
                    }
                    this.blocker.style.display = "none";
                }
                break;

            default:
                break;
        }
    }
}
customElements.define("ab-button", AbButton);
"use strict";

$(document).ready(function () {
    $(window).on("resize", function () {
        $("ab-page").find("ab-checkbox").each(function () {
            if ($(this).attr("width-on-bigscreen")) {
                if ($(this).attr("width")) {
                    $(this).css("width", $(this).attr("width"));
                } else {
                    $(this).css("width", "100%");
                }
            }
        });
    });
});

class AbCheckbox extends HTMLElement {

    constructor() {
        super();

        this.checkspace = document.createElement("div");
        this.spanLabel = document.createElement("span");
        this.spanSubtitle = document.createElement("span");

        this.mainClass = "ab-checkbox";

        this._addEvent();
    }

    _render() {
        //coloca classe
        this.classList.add(this.mainClass);

        //Cria um id
        let id = generateID();
        if (this.hasAttribute("id")) {
            //description: Define se a checkbox já estará selecionada| Boolean | não| false|
            id = this.getAttribute("id");
        } else {
            this.setAttribute("id", id);
        }

        //armazena o conteúdo passado no html
        let conteudo = this.innerHTML;
        this.innerHTML = "";

        //Coloca os atributos no objeto
        if (this.hasAttribute("width")) {
            //description: Largura do componente (afeta somente o espaço que terá para text, não altera o tamanho da checkbox)| % ou px| não| 100%|
            this.style.width = this.getAttribute("width");
            this.style.maxWidth = this.getAttribute("width");
        }

        //Obrigatorio checagem abaixo do width
        if (this.hasAttribute("width-on-bigscreen")) {
            //description: Define a largura do compenente em telas maiores (afeta somente o espaço que terá para text, não altera o tamanho da checkbox)| % ou px| não| |
            if (abner.utils.showBigScreen(top.$("body"))) {
                this.style.width = this.getAttribute("width-on-bigscreen");
            }
        }

        //Cria check
        this.checkspace.classList.add("ab-checkbox-checkspace");
        this.checkspace.setAttribute("id", id + "chk_checkbox");
        this.appendChild(this.checkspace);

        //insere o conteúdo no objeto
        this.spanLabel.classList.add("ab-checkbox-title");
        this.spanLabel.setAttribute("content-area", "true")
        this.spanLabel.setAttribute("id", id + "chk_label");
        if (conteudo) {
            this.spanLabel.innerHTML = conteudo;
        } else {
            if (this.hasAttribute("label")) {
                //description: Label do componente |  | não | |
                this.spanLabel.innerText = this.getAttribute("label");
            }
        }
        this.appendChild(this.spanLabel);

        this.spanSubtitle.classList.add("ab-checkbox-subtitle");
        this.spanSubtitle.setAttribute("id", id + "chk_subtitle");
        this.spanSubtitle.innerText = this.getAttribute("subtitle");
        this.appendChild(this.spanSubtitle);

        //Define se deverá ser alinhado a direita
        if (this.getAttribute("position") == "right") {
            //values: left;right
            //description: Define para onde estará posicionado o checkbox| Posição | não| left|
            this.style.float = this.getAttribute("position");
            this.style.paddingRight = "15px";
        }

        if (this.getAttribute("is-disabled") == "true") {
            //values: true;false
            //description: Define se a checkbox estará desativada| Boolean | não| false|
            this.checkspace.setAttribute("disabled", "disabled");
            this.classList.add("ab-checkbox-disabled");
        }

        //verifica se tem max width
        if (this.hasAttribute("max-width")) {
            //description: Largura máxima do componente | % ou px | não | |
            this.style.maxWidth = this.getAttribute("max-width");
        }

        if (this.hasAttribute("subtitle")) {
            //description: Subtitulo do componente |  | não | |
            this.spanSubtitle.innerText = this.getAttribute("subtitle");
        }

        //Limpa variaveis
        id = null;
        conteudo = null;
    }

    _addEvent() {
        let _this = this;
        $(this).on("tap", function (e) {
            e.preventDefault();

            if (_this.getAttribute("is-disabled") == "false" || !_this.hasAttribute("is-disabled")) {
                if (_this.getAttribute("is-checked") == "true") {
                    _this.setAttribute("is-checked", "false");
                } else {
                    _this.setAttribute("is-checked", "true");
                }
            }

            //Chama a funcao
            if (_this.hasAttribute("onvalidate")) {
                let fn = window[_this.getAttribute("onvalidate")];
                if (typeof fn === 'function') {
                    fn.call($(_this));
                } else {
                    fn = new Function(_this.getAttribute("onvalidate"));
                    fn.call($(_this));
                }
            }
        });
    }

    connectedCallback() {
        if (!this.classList.contains(this.mainClass)) {
            /*this.shadowDom = this.attachShadow({ mode: 'open' }); */
            this._render();
        }
    }

    static get observedAttributes() {
        return ["is-disabled", "is-checked", "width", "width-on-bigscreen", "id", "subtitle", "label"];
    }

    attributeChangedCallback(attrName, oldVal, newVal) {

        switch (attrName) {
            case "is-disabled":
                if (newVal == "true") {
                    this.checkspace.setAttribute("disabled", "disabled");
                    this.classList.add("ab-checkbox-disabled");
                } else {
                    this.checkspace.removeAttribute("disabled");
                    this.classList.remove("ab-checkbox-disabled");
                }
                break;

            case "is-checked":
                //Quando is-disable = true, desabilita o botão
                if (newVal == "true") {
                    this.classList.remove("ab-checkbox-checkspace-middle");
                    this.classList.add("ab-checkbox-checkspace-checked");
                } else if (newVal == "neutral") {
                    this.classList.remove("ab-checkbox-checkspace-checked");
                    this.classList.add("ab-checkbox-checkspace-middle");
                } else {
                    this.classList.remove("ab-checkbox-checkspace-middle");
                    this.classList.remove("ab-checkbox-checkspace-checked");
                }

                if (this.getAttribute("cancel-callback") != "true") {
                    if (this.hasAttribute("onchange")) {
                        let fn = window[this.getAttribute("onchange")];
                        if (typeof fn === 'function') {
                            fn.call($(this));
                        }
                    }
                }
                break;

            case "width":
                this.style.width = newVal;
                break;

            case "width-on-bigscreen":
                if (abner.utils.showBigScreen(top.$("body"))) {
                    this.style.width = newVal;
                }
                break;

            case "id":
                this.checkspace.setAttribute("id", newVal + "chk_checkbox");
                this.spanLabel.setAttribute("id", newVal + "chk_label");
                this.spanSubtitle.setAttribute("id", newVal + "chk_subtitle");
                break;

            case "subtitle":
                this.spanSubtitle.innerText = newVal;
                break;

            case "label":
                this.spanLabel.innerHTML = newVal;
                break;

            default:
                break;
        }
    }

    setText(text) {
        this.spanLabel.innerHTML = text;
    }

    getText() {
        return this.spanLabel.innerText;
    }

    setNumber(text) {
        if (text == 1 || text == true) {
            this.setAttribute("is-checked", "true");
        } else {
            this.setAttribute("is-checked", "false");
        }
    }

    getNumber() {
        if (this.getAttribute("is-checked") == "true") {
            return "1";
        } else if ($(this).attr("is-checked") == "false") {
            return "0";
        }
    }
}
customElements.define("ab-checkbox", AbCheckbox);
"use strict";

class AbHeader extends HTMLElement {

    constructor() {
        super();

        this.img = document.createElement("img");

        this.mainClass = "ab-header";
    }

    _render() {
        // ADICIONA CLASSE PADRAO
        this.classList.add(this.mainClass);

        //Gera novo id
        var id = generateID();
        if (this.hasAttribute("id")) {
            //description: Identificação do objeto, com prefixo "head" | Alfanumérico | sim | randômico |
            id = this.getAttribute("id");
        } else {
            this.setAttribute("id", id);
        }

        //coloca o menu
        this.img.classList.add("ab-header-menu");
        this.img.setAttribute("src", "object/ab-menu/img/open-menu.svg");
        this.appendChild(this.img);

        // parametros
        if (this.hasAttribute("height")) {
            //description: Seta altura| Número com px ou %| não| 50px|
            this.style.height = this.getAttribute("height");
        } else {
            this.style.height = "55px";
        }

        if (this.hasAttribute("width")) {
            //description: Seta largura| Número com px ou %| não| 100%|
            this.style.width = this.getAttribute("width");
        } else {
            this.style.width = "100%";
        }

        // MOSTRA OU NAO MOSTRA
        if (this.hasAttribute("visible")) {
            //values: true;false
            //description: Mostra ou esconde objeto | Boolean | não| true|
            this.setAttribute("visible", this.getAttribute("visible"));
        } else {
            this.setAttribute("visible", "true");
        }
    }

    connectedCallback() {
        if (!this.classList.contains(this.mainClass)) {
            /*this.shadowDom = this.attachShadow({
                mode: 'open'
            }); */
            this._render();
        }
    }

    static get observedAttributes() {
        return ["visible", "position-fixed", "width", "height"];
    }

    attributeChangedCallback(attrName, oldVal, newVal) {
        if (attrName == "visible") {
            if (newVal && (newVal == true || newVal == "true")) {
                this.style.display = "block";
            } else {
                this.style.display = "none";
            }

            this.fixContent();

        } else if (attrName == "position-fixed") {
            // Posicao
            this.fixContent();

        } else if (attrName == "width") {
            this.style.width = newVal;

        } else if (attrName == "height") {
            this.style.height = newVal;
        }
    }

    fixContent() {
        var page = $("body").children("ab-page");
        var content = page.children("ab-page");
        var objHeader = page.children("ab-header");
        var objFooter = page.children("ab-footer");

        var totalH = 0;
        var over = false; //verifica se muda o overflow

        //calcula a diferenca do header 
        if (objHeader.length == 1 && objHeader.attr("position-fixed") == "true" && objHeader.attr("visible") == "true") {
            totalH += parseFloat(objHeader.height());
            over = true;

        } else if (objHeader.attr("visible") == "true") {
            totalH += parseFloat(objHeader.height());
        }

        if (objFooter.length == 1 && objFooter.attr("position-fixed") == "true" && objFooter.attr("visible") == "true") {
            totalH += parseFloat(objFooter.css("height"));
            over = true;

        } else if (objFooter.attr("visible") == "true") {
            totalH += parseFloat(objFooterobjFooter.height());
        }

        if (over) {
            content.css("overflow-y", "auto");
        } else {
            content.css("overflow-y", "initial");
        }

        //arruma content
        content.css("height", "-webkit-calc(100% - " + totalH + "px)");
        content.css("height", "-moz-calc(100% - " + totalH + "px)");
        content.css("height", "-o-calc(100% - " + totalH + "px)");
        content.css("height", "calc(100% - " + totalH + "px)");

        //apaga variaveis
        page = null;
        content = null;
        objHeader = null;
        objFooter = null;
    }
}
customElements.define('ab-header', AbHeader);
"use strict";

class AbInput extends HTMLElement {

    constructor() {
        super();

        this.abner = new AbnerUtils();

        this.input = document.createElement("input");
        this.label = document.createElement("label");
        this.span = document.createElement("span");
        this.errorParent = false;

        this.mainClass = "ab-input-underline";

        this._addEvent();
    }

    _render() {

        var id = null;
        if (this.getAttribute("id")) {
            id = this.getAttribute("id");
        } else {
            id = generateID();
            this.setAttribute("id", id);
        };

        //Coloca classe principal do objeto
        this.classList.add(this.mainClass);

        //width
        if (this.hasAttribute("width")) {
            this.style.width = this.getAttribute("width");
        }

        //Obrigatorio checagem abaixo do width
        if (this.hasAttribute("width-on-bigscreen")) {
            if (this.abner.showBigScreen(top.$("body"))) {
                this.style.width = this.getAttribute("width-on-bigscreen");
            }
        }

        //Coloca Input
        this.appendChild(this.input);
        this.input.setAttribute("id", id + "_input");
        this.input.setAttribute("type", "text");

        //onfocus no objeto
        if (this.hasAttribute("onfocus")) {
            this.input.setAttribute("onfocus", this.getAttribute("onfocus"));
        }

        //BugIOS Corrigi bug do cursor na selecao do texto
        if (this.hasAttribute("maxlength")) {
            this.input.setAttribute("maxlength", this.getAttribute("maxlength"));
        } else {
            this.input.setAttribute("maxlength", "100");
        }

        if (this.hasAttribute("placeholder")) {
            this.input.setAttribute("placeholder", this.getAttribute("placeholder"));
        }

        //Coloca Label
        this.appendChild(this.label);
        this.label.setAttribute("id", id + "_label");
        this.label.setAttribute("for", id + "_input");

        if (this.hasAttribute("label")) {
            this.label.innerText = this.getAttribute("label");
        }

        //Coloca mensagem de erro 
        this.span.setAttribute("id", id + "_span");
        if (this.hasAttribute("error")) {
            this.span.innerText = this.getAttribute("error");
            this.classList.add("ab-input-underline-error");
        } else {
            //se tiver descrição
            if (this.hasAttribute("description")) {
                this.span.innerText = this.getAttribute("description");
            }
        }
        this.appendChild(this.span);

        //desabilitar o campo quando o atributo is-disabled é true
        if (this.getAttribute("is-disabled") == "true") {
            this.input.setAttribute("disabled", true);
        }

        //coloca tabindex
        if (this.hasAttribute("tab-index")) {
            this.input.setAttribute("tabindex", this.getAttribute("tab-index"));
        }

        //para qual index vai
        if (this.hasAttribute("goto-tab-index")) {
            this.input.setAttribute("goto-tab-index", this.getAttribute("goto-tab-index"));
        }

        //para qual index vai
        if (this.hasAttribute("stop-tab-index")) {
            this.input.setAttribute("stop-tab-index", this.getAttribute("stop-tab-index"));
        }

        //verifica se tem max width
        if (this.hasAttribute("max-width")) {
            this.style.maxWidth = this.getAttribute("max-width");
        }

        //visivel
        if (this.getAttribute("visible") == "false") {
            //values: true;false
            //description: Define se o componente estará invisível ou não | Boolean | não | |
            this.style.display = "none";
        }

        /*if (this.hasAttribute("value")) {
            this.innerText = this.getAttribute("value");
        };*/
    }

    _addEvent() {
        var input = $(this.input);
        var _this = this;

        input.on("focus", function () {
            //Arruma scroll no mobile quando sobe o teclado para ANDROID
            setTimeout(function () {
                _this.scrollIntoView();
            }, 500);

            _this.classList.add("ab-input-underline-min");
            _this.classList.add("ab-input-underline-focus");

            //Chama a funcao que colocou no onfocus
            if (this.hasAttribute("onfocus")) {
                var fn = window[this.getAttribute("onfocus")];
                if (typeof fn === 'function') {
                    fn.call($(this));
                }
            }
        });

        input.on("blur", function () {
            _this.classList.remove("ab-input-underline-focus");
            //Triga as validações
            if (!_this.hasAttribute("thousand-mask")) {
                _this.setAttribute("cancel-onchange", "true");
            };
            $(this).trigger("change");

            //Chama a funcao que colcou no onblur
            if (_this.hasAttribute("onblur")) {
                var fn = window[_this.getAttribute("onblur")];
                if (typeof fn === 'function') {
                    fn.call($(_this));
                }
            }
        });

        //Ir para o próximo item quando apertar enter
        input.on("keydown", function (event) {
            var key = event.keyCode ? event.keyCode : event.which;
            //var shift = !!event.shiftKey;
            var max = 0
            var len = _this.input.value.length;
            if (this.hasAttribute("maxlength")) {
                max = this.getAttribute("maxlength");
                if (len > max) {
                    return;
                }
            } else {
                if (key == 13 || key == 9) {
                    return goToNextTabindex(event, $(this), "tap");
                }
            }
        });

        //evento change quando alterar o valor do input
        input.on("change", function (e) {
            e.preventDefault();
            e.stopPropagation();

            //Sobe ou nao o label caso tenha algum valor
            if (this.value.length == 0) {
                _this.classList.remove("ab-input-underline-min");
            } else {
                _this.classList.add("ab-input-underline-min");
            }

            //verifica se o campo é obrigatório
            if (_this.getAttribute("is-required") == "true" && !_this.errorChild) {
                //values: true;false
                if (this.value.length == 0) {
                    _this.setAttribute("error", "Campo obrigatório");
                    _this.errorParent = true;
                } else {
                    _this.removeAttribute("error");
                    _this.errorParent = false;
                    _this.span.innerText = _this.getAttribute("description");
                }
            }

            //Chama a funcao que colcou no onblur
            if (_this.hasAttribute("onchange") && _this.getAttribute("cancel-onchange") != "true") {
                var fn = window[_this.getAttribute("onchange")];
                if (typeof fn === 'function') {
                    fn.call($(_this));
                }
            }
            _this.removeAttribute("cancel-onchange");

            //Chama a funcao que colcou no onblur
            if (_this.hasAttribute("onvalidate")) {
                var fn = window[_this.getAttribute("onvalidate")];
                if (typeof fn === 'function') {
                    fn.call($(_this));
                }
            }
        });

        // $(this).on("change", function (e) {
        //     $(_this.input).trigger("change");
        // });
    }

    connectedCallback() {
        if (!this.classList.contains(this.mainClass)) {
            /*this.shadowDom = this.attachShadow({
                mode: 'open'
            }); */
            this._render();
        }
    }

    static get observedAttributes() {
        return ["id", "error", "is-disabled", "label", "width", "maxlength", "width-on-bigscreen", "tab-index", "goto-tab-index", "value", "visible"];
    }

    attributeChangedCallback(attrName, oldVal, newVal) {

        switch (attrName) {
            case "error":
                if (newVal != undefined && newVal != null) {
                    this.span.innerText = newVal;
                    this.classList.add("ab-input-underline-error");
                    this.errorParent = true;
                }

                if (newVal == null || newVal == "") {
                    this.classList.remove("ab-input-underline-error");
                    this.errorParent = false;
                    this.span.innerText = "";
                    if (this.hasAttribute("description")) {
                        this.span.innerText = this.getAttribute("description");
                    }
                }
                break;

            case "is-disabled":
                //quando o atributo is-disabled é alterado, adiciona ou retira a classe underline-min
                if (newVal == "true") {
                    if (this.input.value.length > 0) {
                        this.classList.add("ab-input-underline-min");
                    }
                    this.input.setAttribute("disabled", true);
                } else {
                    if (this.input.value.length == 0) {
                        this.classList.remove("ab-input-underline-min");
                    }
                    this.input.removeAttribute("disabled");
                }
                break;

            case "label":
                this.label.innerText = newVal;
                break;

            case "id":
                this.label.setAttribute("for", newVal + "_input");
                this.label.setAttribute("id", newVal + "_label");
                this.input.setAttribute("id", newVal + "_input");
                this.span.setAttribute("id", newVal + "_span");
                break;

            case "maxlength":
                this.input.setAttribute("maxlength", newVal);
                break;

            case "width":
                this.style.width = newVal;
                break;

            case "width-on-bigscreen":
                if (this.abner.showBigScreen(top.$("body"))) {
                    this.style.width = newVal;
                }
                break;

            case "tab-index":
                this.input.setAttribute("tabindex", newVal);
                break;

            case "goto-tab-index":
                this.input.setAttribute("goto-tab-index", newVal);
                break;

            /*case "value":
                this.input.value = newVal;
                break;*/

            case "visible":
                if (newVal == "true") {
                    this.style.display = "inline-block";
                } else if (newVal == "false") {
                    this.style.display = "none";
                }
                break;

            default:
                break;
        }
    }

    setText(text) {
        if (this.classList.contains("ab-input-date-underline")) {
            this.setDate(text);
        } else {
            this.input.value = text;
        }

        $(this.input).change();
    }

    getText() {
        if (this.classList.contains("ab-input-date-underline")) {
            return this.getDate();
        } else {
            return this.input.value;
        }
    }

    setNumber(text) {
        this.input.value = text;

        $(this.input).change();
    }

    getNumber() {
        return this.input.value;
    }
}

customElements.define('ab-input', AbInput);
"use strict";

var ChassiFloatButton = function(chassi) {
    // Escopo do chassi
    this.chassi = chassi;

    // Tamanho
    this.size = "65";
}

ChassiFloatButton.prototype.onTouchMove = function(e) {
    e.preventDefault();

    var btnDiv = $("#DivautoHide");

    if (btnDiv.attr('id') != undefined) {
        // Pega o toque
        var touch = new Object();
        if (e.originalEvent && e.originalEvent.touches) {
            touch = e.originalEvent.touches[0] || e.originalEvent.changedTouches[0];
        } else {
            touch = e;
        }

        var h = parseInt($(btnDiv).css("height"));
        var w = parseInt($(btnDiv).css("width"));

        // Move objeto
        $(btnDiv).css("top", touch.pageY - (h / 2));
        $(btnDiv).css("left", touch.pageX - (w / 2));
        $(btnDiv).attr("moved", "true");
    }
}

ChassiFloatButton.prototype.hide = function() {
    var _this = this;

    // Remove Timeout
    if (window.btnChassiFull != undefined) {
        window.clearInterval(window.btnChassiFull);
        window.btnChassiFull = undefined;
    }

    // remove evento
    $(document).unbind("touchmove mousemove", _this.onTouchMove);

    // Remove botao da tela
    $("#DivautoHide").remove();
}

ChassiFloatButton.prototype.refresh = function() {
    var btnDiv = $("#DivautoHide");

    if (btnDiv.attr('id') != undefined) {
        this.hide();
        this.show();
    }
}

ChassiFloatButton.prototype.setNewPosition = function(e, forceMove) {
    var _this = this;
    var oh = parseInt($("#DivautoHide").css("height"));
    var ow = parseInt($("#DivautoHide").css("width"));
    var ol = parseInt($("#DivautoHide").css("left"));
    var ot = parseInt($("#DivautoHide").css("top"));
    var ob = parseInt($("#DivautoHide").css("bottom"));

    var w = parseInt($(window).width());
    var h = parseInt($(window).height());

    var dontMove = false;

    if (ot < 30) {
        $("#DivautoHide").animate({
            "top": "10px"
        }, 100);
        dontMove = true;
    }

    if ((ot + oh + 30) > h) {
        $("#DivautoHide").animate({
            "top": h - (oh + 10)
        }, 100);
        dontMove = true;
    }

    if (dontMove == false || forceMove != undefined) {
        if ((ol + (ow / 2)) > (w / 2)) {
            $("#DivautoHide").animate({
                "left": w - ow - 10 + "px"
            }, 100);
        } else {
            $("#DivautoHide").animate({
                "left": "5px"
            }, 100);
        }
    }

    $(document).unbind("touchmove mousemove", _this.onTouchMove);
}

ChassiFloatButton.prototype.show = function() {
    var btnDiv = $("#DivautoHide");
    var _this = this;

    if (btnDiv.attr('id') == undefined) {

        var div = $("<div>", {
            id: "DivautoHide"
        });

        div.addClass('ab-menu-float');
        div.css('height', '0px');
        div.css('width', '0px');
        div.css('background-color', 'white');
        div.css('border', '1px solid #cacaca');
        div.css('border-radius', '54px');
        div.css('cursor', 'pointer');
        div.css('opacity', '0');
        div.css('position', 'fixed');
        div.css('text-align', 'center');
        div.css('z-index', 98);
        div.css('bottom', '10px');
        div.css('left', $(window).width());

        // Evitar Selecao
        div.attr('unselectable', 'on')
        div.css('user-select', 'none')
        div.on('selectstart', false);

        // Fecha botao ao terminar
        div.on("click", function(ev) {
            ev.preventDefault();

            if ($("#DivautoHide").attr("moved") == "false") {
                $("ab-menu").attr("visible", "true");
                _this.hide();
            }
        });

        // Adiciona no html
        $('body').append(div);

        // animacao
        div.animate({
            opacity: "1",
            height: this.size + "px",
            width: this.size + "px",
            'left': ($(window).width() - this.size - 10)
        }, 200, 'linear');

        // // Coloca funcoes
        div.on("touchstart mousedown", function(e) {
            $("#DivautoHide").attr("moved", "false");

            $(document).bind("touchmove mousemove", _this.onTouchMove);

            $("#DivautoHide").animate({
                "opacity": "1"
            }, 100);
        });

        // Quando subir encostar o botao
        div.on("touchend mouseup", function(e) {

            $(document).unbind("touchmove mousemove", _this.onTouchMove);

            _this.setNewPosition(e);
        });

        // Armazena funcao para deixar mais claro o botao
        if (window.btnChassiFull != undefined) {
            window.clearInterval(window.btnChassiFull);
            window.btnChassiFull = undefined;
        }

        // Coloca acao para ficar transparente
        window.btnChassiFull = setInterval(function() {
            var lastTopLeft = parseInt($("#DivautoHide").attr("lastTopLeft"));
            var ol = parseInt($("#DivautoHide").css("left"));
            var ot = parseInt($("#DivautoHide").css("top"));
            var tot = 0;

            if ($("#DivautoHide").css("left") != "auto" && $("#DivautoHide").css("top") != "auto") {
                tot = (ol + ot);
            } else {
                lastTopLeft = 0;
            }

            if (lastTopLeft == tot) {
                $("#DivautoHide").animate({
                    "opacity": "0.5"
                }, 100);
            }

            // Salva ultimo topleft
            $("#DivautoHide").attr("lastTopLeft", tot);

        }, 3000);
    }
}

class AbMenu extends HTMLElement {

    constructor() {
        super();

        this.mainClass = "ab-menu";

        this.state = "closed";
        this.startX = 0;
        this.currentX = 0;
        this.action = 0;
        this.maxTranslate = 0;
        this.currTranslate = 0;
        this.divOpacity = "0.8";
        this.zIndex = "102";
        this.animationTime = "200";
        this.floatButton = new ChassiFloatButton();
        this.isFooterOnBody = null;
        this.isHeaderOnBody = null;
    }

    _render() {
        var height = $(this).attr("height");
        if (height != undefined) {
            $(this).css("height", height);
        } else {
            $(this).css("height", "100%");
        }
    
        var width = $(this).attr("width");
        if (width != undefined) {
            $(this).css("width", width);
        } else {
            $(this).css("width", "200px");
        }

        var height = $(this).attr("height");
        if (height != undefined) {
            $(this).css("height", height);
        } else {
            $(this).css("height", "100%");
        }
    
        var width = $(this).attr("width");
        if (width != undefined) {
            $(this).css("width", width);
        } else {
            $(this).css("width", "200px");
        }
    
        // Verificacao do footer
        this.isFooterOnBody = false
        this.isHeaderOnBody = $("ab-header").parent().is("body");
    
        this.mode3d = this.support3d();
    
        // Configura menu
        $(this).css("zIndex", this.zIndex);
        $(this).css("position", "fixed");
        $(this).css("left", "0px");
        $(this).css("top", "0px");
        $(this).css("overflowY", "auto");
    
        // Ajusta animacoes
        this.maxTranslate = parseFloat($(this).css("width"));
    
        // Abre ou fecha menu
        var visible = $(this).attr("visible");
        if (visible != undefined) {
            this.visible(this, "0", visible);
        } else {
            this.visible(this, "0", "false");
        }
    
        if ($(this).attr("float-button") == "true") {
            $(window).on("resize",function() {
                _this.floatButton.refresh();
            });
        }
    
        if ($(this).attr("touch-move") == "true") {
            var _this = this;
            $(document).on("touchmove mousemove", function(event) {
                _this.mouseMove(event);
                // return false;
            });
    
            $(document).on("touchstart mousedown", function(event) {
                _this.mouseDown(event);
                // return false;
            });
    
            $(document).on("touchend mouseup", function(event) {
                _this.mouseUp(event);
                // return false;
            });
        }
    
        $(this).addClass(this.mainClass);
    }

    _addEvent() {
    }

    connectedCallback() {
        if (!this.classList.contains(this.mainClass)) {
            /*this.shadowDom = this.attachShadow({
                mode: 'open'
            }); */
            this._render();
            this._addEvent();
        }
    }

    static get observedAttributes() {
        return ["visible"];
    }

    attributeChangedCallback(attrName, oldVal, newVal) {
        if (attrName == "visible") {
            this.isFooterOnBody = false
            this.isHeaderOnBody = $("ab-header").parent().is("body");
    
            var visible = $(this).attr("visible");
    
            this.visible(this, this.animationTime, visible);
    
            if ($(this).attr("float-button") == "true") {
                if (visible == "false") {
                    this.floatButton.show();
                } else {
                    this.floatButton.hide();
                }
            }
        }    
    }

    moveX(_this, time, show, translateX) {
        var mode3d = this.support3d();
        var trans = this.getTransform(_this);
        var y = trans[1];
    
        // transicao
        if (mode3d) {
            $(_this).css("transition", "transform " + time + "ms");
            $(_this).css("-o-transition", "-o-transform " + time + "ms");
            $(_this).css("-ms-transition", "-ms-transform " + time + "ms");
            $(_this).css("-moz-transition", "-moz-transform " + time + "ms");
            $(_this).css("-webkit-transition", "-webkit-transform " + time + "ms");
        }
    
        if (show == false) {
            if (mode3d) {
                $(_this).css({
                    "transform": "translate3d(" + (-1 * translateX) + "px," + y + "px,0)",
                    "-webkit-transform": "translate3d(" + (-1 * translateX) + "px," + y + "px,0)",
                    "-moz-transform": "translate3d(" + (-1 * translateX) + "px," + y + "px,0)",
                    "-ms-transform": "translate3d(" + (-1 * translateX) + "px," + y + "px,0)",
                    "-o-transform": "translate3d(" + (-1 * translateX) + "px," + y + "px,0)"
                });
    
            } else {
                if (time == "0") {
                    $(_this).css("left", (-1 * translateX) + "px");
                } else {
                    $(_this).animate({
                        "left": (-1 * translateX) + "px"
                    }, time, function() {});
                }
            }
        } else {
            if (mode3d) {
                $(_this).css({
                    "transform": "translate3d(0," + y + "px,0)",
                    "-webkit-transform": "translate3d(0," + y + "px,0)",
                    "-moz-transform": "translate3d(0," + y + "px,0)",
                    "-ms-transform": "translate3d(0," + y + "px,0)",
                    "-o-transform": "translate3d(0," + y + "px,0)"
                });
    
            } else {
                if (time == "0") {
                    $(_this).css("left", "0px");
                } else {
                    $(_this).animate({
                        "left": "0px"
                    }, time, function() {});
                }
            }
        }
    }
    
    visible(_this, time, visible) {
    
        if (visible != "true") {
            this.currTranslate = 0;
            this.state = "closed";
    
            this.moveX(_this, time, false, this.maxTranslate);
            // this.moveX($("ab-header"), time, false, this.maxTranslate);
    
            if ($(_this).attr("animation") == "push" || $(_this).attr("animation") == "pushAndFit") {
                this.moveX($("ab-page"), time, true, (-1 * this.maxTranslate));
    
                if (this.isHeaderOnBody) {
                    this.moveX($("ab-header"), time, true, (-1 * this.maxTranslate));
                }
    
                if (this.isFooterOnBody) {
                    this.moveX($("ab-page"), time, true, (-1 * this.maxTranslate));
                }
            }
    
            this.removeBlockDiv();
    
            if ($(_this).attr("animation") == "pushAndFit") {
                setTimeout(function() {
                    $("ab-page").css("width", "100%");
                }, time);
            }
        } else {
            this.state = "opened";
            this.currTranslate = this.maxTranslate;
            this.moveX(_this, time, true, "0");
    
            if ($(_this).attr("animation") == "push" || $(_this).attr("animation") == "pushAndFit") {
                this.moveX($("ab-page"), time, false, (-1 * this.maxTranslate));
    
                if (this.isHeaderOnBody) {
                    this.moveX($("ab-header"), time, false, (-1 * this.maxTranslate));
                }
    
                if (this.isFooterOnBody) {
                    this.moveX($("ab-page"), time, false, (-1 * this.maxTranslate));
                }
            }
    
            this.createBlockDiv();
    
            if ($(_this).attr("animation") == "pushAndFit") {
                setTimeout(function() {
                    var w = parseFloat($("ab-menu").css("width"));
                    $("ab-page").css("width", "-webkit-calc(100% - " + w + "px)");
                    $("ab-page").css("width", "-moz-calc(100% - " + w + "px)");
                    $("ab-page").css("width", "-o-calc(100% - " + w + "px)");
                    $("ab-page").css("width", "calc(100% - " + w + "px)");
                }, time);
            }
        }
    }
    
    support3d() {
        var ret = false;
        var supports3DTransforms = document.body.style['webkitPerspective'] !== undefined || document.body.style['MozPerspective'] !== undefined;
        if (supports3DTransforms) {
            ret = true;
        }
        return ret;
    }
    
    getXY(event) {
        var x = null;
        var y = null;
    
        if (event.originalEvent != null && event.originalEvent.touches != null) {
            var touch = event.originalEvent.touches[0] || event.originalEvent.changedTouches[0];
            x = parseFloat(touch.pageX);
            y = parseFloat(touch.pageY);
        } else {
            x = parseFloat(event.pageX);
            y = parseFloat(event.pageY);
        }
    
        var pos = new Object();
        pos.x = x;
        pos.y = y;
    
        return pos;
    }
    
    mouseMove(event) {
        event.preventDefault();
        var _this = this;
    
        if (this.action == "move" && (this.state == "closed" || this.state == "opened")) {
    
            var pos = this.getXY(event);
    
            // fecha ou abre
            if (this.state == "closed") {
                this.currTranslate = (this.currentX + this.startX + pos.x);
            } else {
                this.currTranslate = (this.currentX + (pos.x - this.startX));
            }
    
            // deixa o translate no maximo e no minimo
            if (this.currTranslate >= this.maxTranslate) {
                this.currTranslate = this.maxTranslate;
            } else if (this.currTranslate <= 0) {
                this.currTranslate = 0;
            }
    
            var trans = this.getTransform(this);
            var x = parseInt(this.currTranslate);
            var y = trans[1];
            var delta = (x - this.maxTranslate);
    
            // Mudar Left
            if (this.mode3d) {
                $(this).css({
                    "transform": "translate3d(" + delta + "px," + y + "px,0)",
                    "-webkit-transform": "translate3d(" + delta + "px," + y + "px,0)",
                    "-moz-transform": "translate3d(" + delta + "px," + y + "px,0)",
                    "-ms-transform": "translate3d(" + delta + "px," + y + "px,0)",
                    "-o-transform": "translate3d(" + delta + "px," + y + "px,0)"
                });
    
                // move o resto
                if ($(this).attr("animation") == "push" || $(this).attr("animation") == "pushAndFit") {
                    var transPage = this.getTransform($("ab-page"));
                    var yPage = transPage[1];
                    $("ab-page").css({
                        "transform": "translate3d(" + x + "px," + yPage + "px,0)",
                        "-webkit-transform": "translate3d(" + x + "px," + yPage + "px,0)",
                        "-moz-transform": "translate3d(" + x + "px," + yPage + "px,0)",
                        "-ms-transform": "translate3d(" + x + "px," + yPage + "px,0)",
                        "-o-transform": "translate3d(" + x + "px," + yPage + "px,0)"
                    });
    
                    if (this.isHeaderOnBody) {
                        var transPage = this.getTransform($("ab-header"));
                        var yHead = transPage[1];
                        $("ab-header").css({
                            "transform": "translate3d(" + x + "px," + yHead + "px,0)",
                            "-webkit-transform": "translate3d(" + x + "px," + yHead + "px,0)",
                            "-moz-transform": "translate3d(" + x + "px," + yHead + "px,0)",
                            "-ms-transform": "translate3d(" + x + "px," + yHead + "px,0)",
                            "-o-transform": "translate3d(" + x + "px," + yHead + "px,0)"
                        });
                    }
    
                    if (this.isFooterOnBody) {
                        var transPage = this.getTransform($("ab-page"));
                        var yPage = transPage[1];
                        $("ab-page").css({
                            "transform": "translate3d(" + x + "px," + yPage + "px,0)",
                            "-webkit-transform": "translate3d(" + x + "px," + yPage + "px,0)",
                            "-moz-transform": "translate3d(" + x + "px," + yPage + "px,0)",
                            "-ms-transform": "translate3d(" + x + "px," + yPage + "px,0)",
                            "-o-transform": "translate3d(" + x + "px," + yPage + "px,0)"
                        });
                    }
                }
            } else {
    
                // Muda menu com a diferenca do tamanho dele
                var diff = parseFloat($(this).css("width"));
                diff = (x - parseFloat(diff));
                $(this).css("left", diff + "px");
    
                if ($(this).attr("animation") == "push" || $(this).attr("animation") == "pushAndFit") {
                    // muda outros com o x normal
                    $("ab-page").css("left", x + "px");
    
                    if (this.isHeaderOnBody) {
                        $("ab-header").css("left", x + "px");
                    }
    
                    if (this.isFooterOnBody) {
                        $("ab-footer").css("left", x + "px");
                    }
                }
            }
    
            // Arruma tamanho
            if ($(this).attr("animation") == "pushAndFit") {
                var diff = parseFloat($(this).css("width"));
                diff = (x - parseFloat(diff));
    
                $("ab-page").css("width", "-webkit-calc(100% - " + diff + "px)");
                $("ab-page").css("width", "-moz-calc(100% - " + diff + "px)");
                $("ab-page").css("width", "-o-calc(100% - " + diff + "px)");
                $("ab-page").css("width", "calc(100% - " + diff + "px)");
            }
        }
    }
    
    mouseDown(event) {
        var mode3d = this.support3d();
    
        // Verificacao do footer
        this.isFooterOnBody = false;
        this.isHeaderOnBody = $("ab-header").parent().is("body");
    
        if (this.state != "closing" && this.state != "opening") {
            // Pega x y
            var pos = this.getXY(event);
    
            // Pega o start x
            if ((this.state == "closed" && pos.x < 10) || (this.state == "opened" && (pos.x > (this.maxTranslate - (this.maxTranslate / 3))) && pos.x < this.maxTranslate + 40)) {
                event.preventDefault();
    
                // transicao
                if (mode3d) {
                    $(this).css("transition", "none");
                    $(this).css("-o-transition", "none");
                    $(this).css("-ms-transition", "none");
                    $(this).css("-moz-transition", "none");
                    $(this).css("-webkit-transition", "none");
    
                    if (this.isHeaderOnBody) {
                        $("ab-header").css("transition", "none");
                        $("ab-header").css("-o-transition", "none");
                        $("ab-header").css("-ms-transition", "none");
                        $("ab-header").css("-moz-transition", "none");
                        $("ab-header").css("-webkit-transition", "none");
                    }
    
                    if ($(this).attr("animation") == "push" || $(this).attr("animation") == "pushAndFit") {
                        $("ab-page").css({
                            "transition": "none",
                            "-o-transition": "none",
                            "-ms-transition": "none",
                            "-moz-transition": "none",
                            "-webkit-transition": "none"
                        });
                    }
                }
    
                if (this.state == "closed") {
                    this.removeBlockDiv();
                    this.createBlockDiv();
                }
    
                this.startX = pos.x;
                this.currentX = this.currTranslate;
                this.action = "move";
    
            }
        }
    }
    
    mouseUp(event) {
        if (this.action == "move") {
            // Se soltar no meio decide para onde ir
            if (Math.abs(this.currTranslate) < (this.maxTranslate / 2)) {
                if ($(this).attr("visible") == "false") {
                    this.visible(this, this.animationTime, "false");
                } else {
                    $(this).attr("visible", false);
                }
    
            } else {
                if ($(this).attr("visible") == "true") {
                    this.visible(this, this.animationTime, "true");
                } else {
                    $(this).attr("visible", true);
                }
            }
    
            this.action = null;
            this.startX = null;
            this.currentX = null;
        }
    }
    
    removeBlockDiv() {
        if ($("#ab-menu-block-div").length != 0) {
            $("#ab-menu-block-div").css("opacity", "0");
            $("#ab-menu-block-div").css("-webkit-opacity", "0");
            $("#ab-menu-block-div").css("-moz-opacity", "0");
            $("#ab-menu-block-div").css("-ms-opacity", "0");
            $("#ab-menu-block-div").css("-0-opacity", "0");
    
            setTimeout(function() {
                $("#ab-menu-block-div").remove();
            }, this.animationTime);
        }
    }
    
    createBlockDiv(forceOpacity) {
        if ($(this).attr("block-content") == "true") {
            if ($("#ab-menu-block-div").length == 0) {
                var div = $("<div>");
                div.appendTo($("ab-menu").parent());
                div.css("zIndex", (this.zIndex - 1));
                div.attr("id", "ab-menu-block-div");
                div.addClass("ab-menu-block-div");
    
                if ($(this).attr("close-image") != undefined && $(this).attr("close-image") != "") {
                    var imgClose = $("<img>");
                    imgClose.attr("src", $(this).attr("close-image"));
                    imgClose.addClass("ab-menu-block-close");
                    imgClose.appendTo(div);
                }
    
                // animacao de opacidade
                div.css("transition", "opacity " + this.animationTime + "ms linear");
                div.css("-webkit-transition", "-webkit-opacity " + this.animationTime + "ms linear");
    
                div.on("touchstart mousedown", function(event) {
                    // event.preventDefault();
                    // return false;
                });
    
                div.on("touchend mouseup", function(event) {
                    // event.preventDefault();
                    $("ab-menu").attr("visible", "false");
                });
    
                div.on("touchmove mousemove", function(event) {
                    event.preventDefault();
                    // return false;
                });
    
                // Se abrir forcando opacity maxima
                if (forceOpacity) {
                    $(".ab-menu-block-div").css("opacity", this.divOpacity);
                }
            }
            // altera opacidade
            if ($(".ab-menu-block-div").css("opacity") != this.divOpacity) {
                $(".ab-menu-block-div").css("opacity", this.divOpacity);
                $(".ab-menu-block-div").css("-webkit-opacity", this.divOpacity);
                $(".ab-menu-block-div").css("-moz-opacity", this.divOpacity);
                $(".ab-menu-block-div").css("-ms-opacity", this.divOpacity);
            }
        }
    }

    getTransform(el) {
        var prop = "";
    
        if ($(el).css('-webkit-transform') != undefined) {
            prop = $(el).css('-webkit-transform');
        } else if ($(el).css('transform') != undefined) {
            prop = $(el).css('transform');
        } else if ($(el).css('-moz-transform') != undefined) {
            prop = $(el).css('-moz-transform');
        } else if ($(el).css('-ms-transform') != undefined) {
            prop = $(el).css('-ms-transform');
        } else {
            return [0, 0, 0];
        }
    
        var results = prop
            .match(/matrix(?:(3d)\(-{0,1}\d+(?:, -{0,1}\d+)*(?:, (-{0,1}\d+))(?:, (-{0,1}\d+))(?:, (-{0,1}\d+)), -{0,1}\d+\)|\(-{0,1}\d+(?:, -{0,1}\d+)*(?:, (-{0,1}\d+))(?:, (-{0,1}\d+))\))/);
    
        if (!results)
            return [0, 0, 0];
        if (results[1] == '3d')
            return results.slice(2, 5);
    
        results.push(0);
        return results.slice(5, 8);
    }
}
customElements.define("ab-menu", AbMenu);

class AbMenuBtn extends HTMLElement {

    constructor() {
        super();

        this.mainClass = "ab-menu-btn";

    }

    _render() {
        $(this).attr("href", "javascript:void(0)");

        $(this).on("touchstart mousedown", function() {
            if ($("ab-menu").attr("visible") == "true") {
                $("ab-menu").attr("visible", "false");
            } else {
                $("ab-menu").attr("visible", "true");
            }
        });
    
        $(this).addClass(this.mainClass);
    }

    _addEvent() { }

    connectedCallback() {
        if (!this.classList.contains(this.mainClass)) {
            /*this.shadowDom = this.attachShadow({
                mode: 'open'
            }); */
            this._render();
            this._addEvent();
        }
    }

    static get observedAttributes() {
        return [];
    }

    attributeChangedCallback(attrName, oldVal, newVal) { }
}
customElements.define("ab-menu-btn", AbMenuBtn);
"use strict";

window['onchangeforcheckbox'] = null;
class AbModalUtil {

    constructor() {

        this.divBackground = document.createElement("div");

    }

    hide() {
        if ($("#ab-modal").length > 0) {

            $("#ab-modal").remove();
            $('.chat-body-div').css("overflow-y", "scroll");

        }
    }

    show(prop) {
        var id = generateID();
        var _this = this;


        //compatibilidade com versao antiga
        if (prop && prop.callBack) {
            prop.callback = prop.callBack;
        }

        this.hide();

        //Cria fundo preto
        this.divBackground.classList.add("ab-modal-background");
        this.divBackground.setAttribute("id", "ab-modal");
        setTimeout(function () {
            _this.hide();
            $("body")[0].appendChild(_this.divBackground);
            
        }, 1);

        $(this.divBackground).on("mousedown touchstart", function (e) {
            if  (e.target == this) {
                e.preventDefault();
                e.stopPropagation();
                if (_this.divBackground.getAttribute("closable") == "true" && e.target.id == _this.divBackground.getAttribute("id")) {
                    _this.hide();
                }
            }
        });

        if (prop.closable) {
            this.divBackground.setAttribute("closable", prop.closable);
        }

        switch (prop.type) {
            case "promocional":
                this.modalPromocional(prop);
                break;

            case "checkbox":
                this.modalCheckOrList(prop);
                break;

            case "tela":
                this.modalTela(prop);
                break;

            default:
                if (prop.list && prop.list.length > 0) {
                    this.modalCheckOrList(prop);
                } else {
                    this.modalNormal(prop);
                }
                break;
        }
    }

    modalNormal(prop) {
        var _this = this;

        var divWrapper = document.createElement("div");
        divWrapper.classList.add("ab-modal-wrapper");
        divWrapper.setAttribute("id", "ab-modal" + "_divWrapper");
        this.divBackground.appendChild(divWrapper);

        //Cria janela branca para colocar o texto e botoes
        var divModal = document.createElement("div");
        divModal.classList.add("ab-modal-window");
        divModal.setAttribute("id", "ab-modal" + "_divModal");
        divWrapper.appendChild(divModal);

        if (prop.type) {
            //Se tiver type sucess, error, alerta, divulgacao e orientacao, apresenta imagem no content representando o caso
            var divModalIcon = document.createElement("div");
            divModalIcon.classList.add("ab-modal-icon");
            this.divBackground.classList.add("ab-modal-" + prop.type);
            divModal.appendChild(divModalIcon);
        // } else {
        //     this.divBackground.classList.add("ab-modal-alerta");
        }

        if(prop.maxWidth){
            divModal.style.maxWidth = prop.maxWidth;
            divModal.style.margin = "auto";
        }

        //Se tiver titulo, adiciona div de titulo
        if (prop.title) {
            var divTitle = document.createElement("div");
            divTitle.classList.add("ab-modal-title");
            divTitle.setAttribute("id", "ab-modal_divTitle");
            if (typeof prop.title == 'object') {
                var serializer = new XMLSerializer();
                divTitle.innerHTML = serializer.serializeToString(prop.title[0]);
            } else {
                divTitle.innerHTML = prop.title;
            }
            divModal.appendChild(divTitle);
        };

        //Se tiver texto, apresenta texto
        if (prop.text) {
            var spanText = $("<span/>");
            //spanText.html(prop.text);
            if (typeof prop.text == 'object') {
                var serializer = new XMLSerializer();
                spanText.html(serializer.serializeToString(prop.text[0]));
            } else {
                spanText.html(prop.text);
            }
            spanText.addClass("ab-modal-span");
            spanText.appendTo(divModal);
        }

        //Cria botoes solicitados
        if (prop.buttons && prop.buttons.length > 0) {
            //Para cada item "buttons" no html, irá criar um botão.
            for (var i = 0; i < prop.buttons.length; i++) {
                let btnModalNormal = document.createElement("ab-button");
                btnModalNormal.setAttribute("label", prop.buttons[i].title);
                btnModalNormal.setAttribute("order", i);
                if (i > 0) {
                    btnModalNormal.setAttribute("theme", "secondary");
                }
                divModal.appendChild(btnModalNormal);
                $(btnModalNormal).on("tap", function (e) {
                    e.preventDefault();

                    _this.hide();

                    let order = parseInt($(this).attr("order"));
                    if (typeof prop.buttons[order].callback === 'function') {
                        prop.buttons[order].callback.call(null);
                    }
                });
            }
        }

        $(divWrapper).on("touchstart mousedown", function (e) {
            if (divModal.scrollHeight > divModal.clientHeight) {
                if (e.target.id == "ab-modal_divWrapper" || e.target.id == "ab-modal_divTitle") {
                    e.preventDefault();
                } else {
                    e.stopPropagation();
                }
            } else {
                e.preventDefault();
            }
        });

        setTimeout(function () {
            if (prop && typeof prop.onopen === 'function') {
                prop.onopen.call(null, divContent);
            }
        }, 2);
    }

    modalPromocional(prop) {
        var _this = this;

        this.divBackground.style.backgroundColor = "transparent";

        let divPromo = document.createElement("div");
        divPromo.classList.add("ab-modal-promocional-content");
        this.divBackground.appendChild(divPromo);

        let closePromo = document.createElement("span");
        closePromo.classList.add("ab-modal-promocional-close");
        closePromo.innerText = "X"
        divPromo.appendChild(closePromo);
        $(closePromo).on("tap", function (e) {
            e.preventDefault();

            _this.hide();

            if (typeof prop.buttons[0].callback === 'function') {
                prop.buttons[0].callback.call(null);
            }
        });

        let divImg = document.createElement("div");
        divImg.classList.add("ab-modal-promocional-imagem");
        divPromo.appendChild(divImg);

        let imgPromo = document.createElement("img");
        imgPromo.setAttribute("src", prop.imgPromo);
        divImg.appendChild(imgPromo);

        let titlePromo = document.createElement("h2");
        titlePromo.classList.add("ab-modal-promocional-title");
        titlePromo.innerText = prop.title;
        divPromo.appendChild(titlePromo);

        let pPromo = document.createElement("p");
        pPromo.classList.add("ab-modal-promocional-text");
        pPromo.innerHTML = prop.text;
        divPromo.appendChild(pPromo);

        if (prop.buttons[0]) {
            let btnPromo = document.createElement("ab-button");
            btnPromo.classList.add("ab-modal-promocional-button");
            if (prop.buttons[0].title) {
                btnPromo.setAttribute("label", prop.buttons[0].title.toUpperOnlyFirstLetter());
            } else {
                btnPromo.setAttribute("label", "Fechar");
            }
            divPromo.appendChild(btnPromo);
            $(btnPromo).on("tap", function (e) {
                e.preventDefault();

                _this.hide();

                if (typeof prop.buttons[0].callback === 'function') {
                    prop.buttons[0].callback.call(null);
                }
            });
        }
    }

    modalCheckOrList(prop) {
        var _this = this;

        this.divBackground.style.backgroundColor = "transparent";

        let divTela = document.createElement("div");
        divTela.classList.add("ab-modal-tela-window");
        this.divBackground.appendChild(divTela);

        let closeTela = document.createElement("span");
        closeTela.classList.add("ab-modal-tela-close");
        closeTela.innerText = "X"
        divTela.appendChild(closeTela);
        $(closeTela).on("tap", function (e) {
            e.preventDefault();

            _this.hide();
        });

        let divTitle = document.createElement("div");
        divTitle.classList.add("ab-modal-tela-title");
        divTitle.innerHTML = prop.title;
        divTela.appendChild(divTitle);

        let divContent = document.createElement("div");
        divContent.classList.add("ab-modal-tela-content");
        divContent.setAttribute("id", "ab-modal-content");
        divTela.appendChild(divContent);

        let divButton = document.createElement("div");
        divButton.classList.add("ab-modal-tela-buttons");
        divTela.appendChild(divButton);

        //Se tiver lista na chamada do modal no HTML, cria a lista
        if (prop.list && prop.list.length > 0) {
            //trata para quando for lista normal ou lista de checkbox
            if (prop.type == "checkbox") {
                //adiciona attr max-select para o modal
                if (prop["max-select"]) {
                    divContent.setAttribute("max-select", prop["max-select"]);
                }

                //cria os checkbox no modal
                for (let i = 0; i < prop.list.length; i++) {
                    let modalCheck = document.createElement("ab-checkbox");
                    modalCheck.classList.add("modal-checkbox");
                    modalCheck.setAttribute("cancel-callback", "true");
                    divContent.appendChild(modalCheck);

                    if (prop.list[i].code) {
                        modalCheck.setAttribute("code", prop.list[i].code);
                    }
                    if (prop.list[i].subtitle) {
                        modalCheck.setAttribute("subtitle", prop.list[i].subtitle);
                    }

                    modalCheck.setAttribute("is-checked", prop.list[i].checked == undefined ? "false" : prop.list[i].checked);
                    modalCheck.setAttribute("label", prop.list[i].label == undefined ? "NÃO INFORMADO" : prop.list[i].label);

                    if (prop && prop.onchange) {
                        window['onchangeforcheckbox'] = prop.onchange;

                        modalCheck.setAttribute("onchange", 'onchangeforcheckbox');
                    }

                    modalCheck.setAttribute("cancel-callback", "false");
                }

                if (prop.buttons[0]) {
                    let btnTela = document.createElement("ab-button");
                    btnTela.classList.add("ab-modal-promocional-button");
                    if (prop.buttons[0].title) {
                        btnTela.setAttribute("label", prop.buttons[0].title.toUpperOnlyFirstLetter());
                    } else {
                        btnTela.setAttribute("label", "Fechar");
                    }
                    divButton.appendChild(btnTela);
                    $(btnTela).on("tap", function (e) {
                        e.preventDefault();

                        var data = [];
                        $("#ab-modal-content").children().each(function () {

                            var item = {
                                "code": $(this).attr("code"),
                                "label": $(this).attr("label"),
                                "subtitle": $(this).attr("subtitle"),
                                "checked": $(this).attr("is-checked")
                            }

                            data.push(item);
                        });

                        _this.hide();

                        if (typeof prop.buttons[0].callback === 'function') {
                            prop.buttons[0].callback.call(null, data);
                        }
                    });
                }
            } else {

                //Para cada item na array list, irá criar 1 item na lista
                for (var i = 0; i < prop.list.length; i++) {
                    let divItem = document.createElement("div");
                    var divSpan = document.createElement("span");
                    divSpan.innerHTML = prop.list[i].text;
                    divSpan.setAttribute("code", prop.list[i].code);
                    divSpan.setAttribute("content", "text");
                    divItem.classList.add("ab-modal-list");
                    divContent.appendChild(divItem);
                    divItem.appendChild(divSpan);

                    //Se tiver subtexto, adiciona texto embaixo do texto principal
                    if (prop.list[i].subtext) {
                        var divParag = document.createElement("p");
                        divParag.innerHTML = prop.list[i].subtext;
                        divParag.setAttribute("content", "subtext");
                        divSpan.appendChild(divParag);
                    }

                    if (prop.callback) {
                        var divIcon = document.createElement("ab-icon-button");
                        divIcon.classList.add("ab-icon-button-seta");
                        divItem.appendChild(divIcon);
                        divItem.setAttribute("order", i);
                        $(divItem).on("tap", function (e) {
                            e.preventDefault();

                            var data = new Object();
                            data.text = $(this).children("[content=text]")[0].childNodes[0].nodeValue;
                            data.subtext = $(this).children("[content=text]").children("[content=subtext]").text();
                            data.code = $(this).children("[content=text]").attr("code");

                            _this.hide();

                            if (prop && typeof prop.callback === 'function') {
                                prop.callback.call(null, data);
                            }
                        });
                    }
                }
                let btnTela = document.createElement("ab-button");
                btnTela.setAttribute("label", "Fechar");
                divButton.appendChild(btnTela);
                $(btnTela).on("tap", function (e) {
                    e.preventDefault();

                    _this.hide();
                });
            }
        }

        $("body").removeFocus();

        setTimeout(function () {
            if (prop && typeof prop.onopen === 'function') {
                prop.onopen.call(null, $(divContent));
            }
        }, 2);
    }

    modalTela(prop) {
        var _this = this;

        this.divBackground.style.backgroundColor = "transparent";

        let divTela = document.createElement("div");
        divTela.classList.add("ab-modal-tela-window");
        this.divBackground.appendChild(divTela);

        let closeTela = document.createElement("span");
        closeTela.classList.add("ab-modal-tela-close");
        closeTela.innerText = "X"
        divTela.appendChild(closeTela);
        $(closeTela).on("tap", function (e) {
            e.preventDefault();

            _this.hide();
        });

        let divTitle = document.createElement("div");
        divTitle.classList.add("ab-modal-tela-title");
        divTitle.innerHTML = prop.title;
        divTela.appendChild(divTitle);

        let divContent = document.createElement("div");
        divContent.classList.add("ab-modal-tela-content");
        divContent.setAttribute("id", "ab-modal-content");
        divTela.appendChild(divContent);

        let divButton = document.createElement("div");
        divButton.classList.add("ab-modal-tela-buttons");
        divTela.appendChild(divButton);

        divContent.innerHTML = prop.text;

        //Cria botoes solicitados
        if (prop.buttons && prop.buttons.length > 0) {
            //Para cada item "buttons" no html, irá criar um botão.
            let btnHeight = 0;
            for (var i = 0; i < prop.buttons.length; i++) {
                let btnTela = document.createElement("ab-button");
                btnTela.setAttribute("label", prop.buttons[i].title);
                btnTela.setAttribute("order", i);
                if (i > 0) {
                    btnTela.setAttribute("theme", "secondary");
                }
                divButton.appendChild(btnTela);
                btnHeight = btnHeight + 64;
                $(btnTela).on("tap", function (e) {
                    e.preventDefault();

                    _this.hide();

                    let order = parseInt($(this).attr("order"));
                    if (typeof prop.buttons[order].callback === 'function') {
                        prop.buttons[order].callback.call(null);
                    }
                });
            }
            divButton.style.height = btnHeight + "px";
            if (btnHeight > 64) {
                divContent.setAttribute("style", "calc(100% - 210px) !important;");
            }
        }

        $("body").removeFocus();

        setTimeout(function () {
            if (prop && typeof prop.onopen === 'function') {
                prop.onopen.call(null, $(divContent));
            }
        }, 2);
    }
}

"use strict";

//component-wrapper: bradesco-input-password-underline
class AbPassword extends AbInput {

    constructor() {
        super();

        this.childClass = "ab-password";
        // this.img = document.createElement("img");
        this.errorChild = false;

        this._addEventChild();
    }

    _renderChild() {
        //Coloca classe principal do objeto
        this.classList.add(this.childClass);

        this.input.setAttribute("type", "password");

        if (this.getAttribute("keyboard") == "number") {
            this.input.setAttribute("pattern", "[0-9]*");
        }

        if (!this.hasAttribute("maxlength")) {
            this.input.setAttribute("maxlength", "10");
        }

    }

    _addEventChild() {
        var _this = this;

        //Ir para o próximo item quando apertar enter
        $(this.input).on("keydown", function (e) {
            return goToNextTabindex(e, $(this), "tap");
        });

    }

    connectedCallback() {
        if (!this.classList.contains(this.childClass)) {
            /*this.shadowDom = this.attachShadow({
                mode: 'open'
            }); */
            super.connectedCallback();
            this._renderChild();
        }
    }

    static get observedAttributes() {
        return ["id", "error", "is-disabled", "label", "width", "maxlength", "width-on-bigscreen", "tab-index", "goto-tab-index", "value", "visible", "description"];
    }

    attributeChangedCallback(attrName, oldVal, newVal) {
        super.attributeChangedCallback(attrName, oldVal, newVal);

        if (attrName == "description") {
            this.span.innerText = newVal;
        }
    }

}
customElements.define('ab-password', AbPassword);
"use strict";

class AbRadio extends HTMLElement {

    constructor() {
        super();

        this.radioinput = document.createElement("input");
        this.radio = document.createElement("div");
        this.spanLabel = document.createElement("span");
        this.spanSubtitle = document.createElement("span");

        this.mainClass = "ab-radio";

    }

    _render() {
        //coloca classe
        this.classList.add(this.mainClass);

        //Cria um id
        let id = generateID();
        if (this.hasAttribute("id")) {
            //description: Identificação do campo. Atributo obrigatório para interagir com o input| Alfanumérico| sim| randomico |
            id = this.getAttribute("id");
        } else {
            this.setAttribute("id", id);
        }

        //armazena o conteúdo passado no html
        let conteudo = this.innerHTML;
        this.innerHTML = "";

        //Coloca os atributos no objeto
        if (this.hasAttribute("width")) {
            //description: Largura do input.| Alfanumérico| não| 100%|
            this.style.width = this.getAttribute("width");
            this.style.maxWidth = this.getAttribute("width");
        }

        //Obrigatorio checagem abaixo do width
        if (this.hasAttribute("width-on-bigscreen")) {
            //description: Largura do componente em telas maiores| % ou px| não| |
            if (abner.utils.showBigScreen(top.$("body"))) {
                this.style.width = this.getAttribute("width-on-bigscreen");
            }
        }

        //Cria check
        this.radioinput.classList.add("ab-radio-input");
        this.radioinput.setAttribute("type", "radio");
        this.radioinput.setAttribute("name", this.getAttribute("name"));
        this.radioinput.setAttribute("id", id + "rd_radioinput");
        this.appendChild(this.radioinput);

        //Cria objeto
        this.radio.classList.add("ab-radio-radiospace");
        this.radio.setAttribute("id", id + "rd_radio");
        this.appendChild(this.radio);

        //insere o conteúdo no objeto
        this.spanLabel.classList.add("ab-radio-title");
        this.spanLabel.setAttribute("content-area", "true")
        this.spanLabel.setAttribute("id", id + "rd_label");
        if (conteudo) {
            this.spanLabel.innerHTML = conteudo;
        } else {
            if (this.hasAttribute("label")) {
                //description: Label do componente |  | não | |
                this.spanLabel.innerText = this.getAttribute("label");
            }
        }
        this.appendChild(this.spanLabel);

        this.spanSubtitle.classList.add("ab-radio-subtitle");
        this.spanSubtitle.setAttribute("id", id + "rd_subtitle");
        this.spanSubtitle.innerText = this.getAttribute("subtitle");
        this.appendChild(this.spanSubtitle);

        //Define se deverá ser alinhado a direita
        if (this.hasAttribute("position") == "right") {
            //values: left;right
            //description: Posição do input| Position| não| left|
            this.style.float = this.getAttribute("position");
            this.style.paddingRight = "15px";
            this.radio.style.textAlign = "right";
        }

        if (this.getAttribute("is-disabled") == "true") {
            //values: true;false
            //description: Desabilita o campo para alteração.| String| não| vazio|
            this.radio.setAttribute("disabled", "disabled");
            this.classList.add("ab-radio-disabled");
        }

        //verifica se tem max width
        if (this.hasAttribute("max-width")) {
            //description: Largura máxima| px | não| vazio|
            this.style.maxWidth = this.getAttribute("max-width");
        }

        if (this.hasAttribute("subtitle")) {
            //description: Subtitulo do componente| Boolean| não| false|
            this.spanSubtitle.innerText = this.getAttribute("subtitle");
        }

        if (this.getAttribute("is-checked") == "true") {
            //values: true;false
            //description: Define se o input estará selecionado ou não| Boolean| não| false|
            this.radioinput.setAttribute("checked", true);
        }

        //Limpa variaveis
        id = null;
        conteudo = null;
    }

    _addEvent() {
        var _this = this;
        $(this).on("tap", function (e) {
            e.preventDefault();

            if (_this.getAttribute("is-disabled") != "true") {
                _this.radioinput.checked = true;

                if (_this.hasAttribute("onchange")) {
                    var fn = window[_this.getAttribute("onchange")];
                    if (typeof fn === 'function') {
                        fn.call($(_this));
                    }
                }
            };
        });
    }

    connectedCallback() {
        if (!this.classList.contains(this.mainClass)) {
            /*this.shadowDom = this.attachShadow({ mode: 'open' }); */
            this._render();
            this._addEvent();
        }
    }

    static get observedAttributes() {
        return ["is-disabled", "width", "width-on-bigscreen", "id", "subtitle", "label", "name", "is-checked"];
    }

    attributeChangedCallback(attrName, oldVal, newVal) {

        switch (attrName) {
            case "is-disabled":
                if (newVal == "true") {
                    this.radio.setAttribute("disabled", "disabled");
                    this.classList.add("ab-radio-disabled");
                } else {
                    this.radio.removeAttribute("disabled");
                    this.classList.remove("ab-radio-disabled");
                }
                break;
        
            case "width":
                this.style.width = newVal;
                break;
        
            case "width-on-bigscreen":
                if (abner.utils.showBigScreen(top.$("body"))) {
                    this.style.width = newVal;
                }
                break;
        
            case "id":
                this.radioinput.setAttribute("id", newVal + "rd_radioinput");
                this.radio.setAttribute("id", newVal + "rd_radio");
                this.spanLabel.setAttribute("id", newVal + "rd_label");
                this.spanSubtitle.setAttribute("id", newVal + "rd_subtitle");
                break;
        
            case "subtitle":
                this.spanSubtitle.innerText = newVal;
                break;
        
            case "label":
                this.spanLabel.innerText = newVal;
                break;
        
            case "name":
                this.radioinput.setAttribute("name", newVal);
                break;
        
            case "is-checked":
                if (newVal == "true") {
                    this.radioinput.checked = true;
                }
                break;
        
            default:
                break;
        }
    }

    setText(text) {
        
        this.spanLabel.innerHTML = text;
    }

    getText() {

        return this.spanLabel.innerText;
    }

    setNumber(text) {
        
        if (text == 1 || text == true) {
            this.radioinput.checked = true;
        } else {
            this.radioinput.checked = false;
        }

    }

    getNumber() {

        if (this.radioinput.checked == true) {
            return "1";
        } else {
            return "0";
        }
    }
}
customElements.define("ab-radio", AbRadio);
"use strict";

$(document).ready(function () {
    //funcao para corrigir o data
    $.fn.fillSelect = function (selectArr, callback) {
        this[0].fillSelect(selectArr, callback);

        var fn = window[callback];
        if (typeof fn === 'function') {
            fn.call(null);
        } else if (typeof callback === 'function') {
            callback.call(null);
        }
    };


});

class AbSelect extends HTMLElement {

    constructor() {
        super();

        this.label = document.createElement("label");
        this.select = document.createElement("select");
        this.option = document.createElement('option');
        this.img = document.createElement("img");
        this.legend = document.createElement("legend");

        this.mainClass = "ab-select";

    }

    _render() {
        //Cria um id
        var id = generateID();
        if (this.hasAttribute("id")) {
            //description: Identificador único do objeto, com prefixo "sel"| Alfanumérico |não| randômico|
            id = this.getAttribute("id");
        } else {
            this.setAttribute("id", id);
        }

        this.classList.add(this.mainClass);

        //no caso do combo ja fica mimificado
        this.classList.add("ab-select-min");

        //Coloca Label
        this.label.classList.add("ab-select-label");
        this.label.setAttribute("id", id + "sl_label");
        this.label.setAttribute("for", id + "sl_input");
        this.appendChild(this.label);

        if (this.hasAttribute("label")) {
            //description: Colocar uma descrição que represente o valor que será colocado no input da página| Alfanumérico| não| vazio|
            this.label.innerText = this.getAttribute("label");
        };

        //Cria o combo
        this.select.classList.add("ab-select-select");
        this.select.setAttribute("id", id + "sl_input")
        this.appendChild(this.select);

        //onfocus no objeto
        if (this.hasAttribute("onfocus")) {
            this.select.setAttribute("onfocus", this.getAttribute("onfocus"));
        }

        //preenche combo
        this.option.setAttribute("selected", true);
        this.option.setAttribute("value", "");
        this.option.innerText = "Selecione";
        this.appendChild(this.select);

        //coloca cor no label
        if (this.hasAttribute("width")) {
            //description: Largura do select. | Alfanumérico | não | 100% |
            this.style.width = this.getAttribute("width");
        }

        //verifica width-on-bigscreen
        if (this.hasAttribute("width-on-bigscreen")) {
            //description: Largura do componente em telas maiores| % ou px| não| |
            if (pmb.utils.showBigScreen(top.$("body"))) {
                this.style.width = this.getAttribute("width-on-bigscreen");
            }
        }

        //desabilitar o campo quando o atributo is-disabled é true
        if (this.getAttribute("is-disabled") == "true") {
            //values: true;false
            //description: Desabilita o campo para alteração. | Booleano | não | vazio |
            this.select.setAttribute("disabled", true);
        }

        //coloca tabindex
        if (this.hasAttribute("tab-index")) {
            //description: Ordem de tabulação na página. | Numérico | não | vazio |
            this.select.setAttribute("tabindex", this.getAttribute("tab-index"));
        }

        //para qual index vai
        if (this.hasAttribute("goto-tab-index")) {
            this.select.setAttribute("goto-tab-index", this.getAttribute("goto-tab-index"));
        }

        //para qual index vai
        if (this.hasAttribute("stop-tab-index")) {
            this.select.setAttribute("stop-tab-index", this.getAttribute("stop-tab-index"));
        }

        //Mesmo comportamento porém com outro nome de atributo, necessário ajustar todos projetos que usam o de cima
        if (this.getAttribute("visible") == "false") {
            //values: true;false
            this.style.display = "none";
        }

        //Coloca mensagem de erro 
        this.legend.classList.add("ab-select-span");
        this.legend.setAttribute("id", id + "sl_span");
        if (this.hasAttribute("error")) {
            this.legend.innerText = this.getAttribute("error");
            this.classList.add("ab-select-error");
        } else {
            //se tiver descrição
            if (this.hasAttribute("description")) {
                this.legend.innerText = this.getAttribute("description");
            };
        }
        this.appendChild(this.legend);

        this.img.classList.add("ab-select-seta");
        this.img.setAttribute("src", "object/ab-select/img/seta-baixo.svg");
        this.appendChild(this.img);

        //Limpar variaveis
        id = null;
    }

    _addEvent() {

        var selectEl = $(this.select);

        //Ao sair ele volta o label ou deixa o valor
        selectEl.on("blur", function () {
            var _this = this.parentElement;
            //tira classe que mostra focus
            _this.classList.remove("ab-select-focus");

            //Na checar conteudo
            _this.setAttribute("cancel-onchange", "true");
            $(this).trigger("change");

            //Chama a funcao que colcou no onblur
            if (_this.hasAttribute("onblur")) {
                var fn = window[_this.getAttribute("onblur")];
                if (typeof fn === 'function') {
                    fn.call($(_this));
                }
            }
            _this = null;
        });

        //na mudanca
        selectEl.on("change", function () {
            var _this = this.parentElement;
            //verifica se o campo é obrigatório
            if (_this.getAttribute("is-required") == "true") {
                //values: true;false
                if (_this.getSelected(this)) {
                    _this.removeAttribute("error");
                } else {
                    _this.setAttribute("error", "Campo obrigatório");
                }
            }

            //Chama a funcao que colcou no onchange
            if (_this.hasAttribute("onchange") && _this.getAttribute("cancel-onchange") != "true") {
                var functionsArray = _this.getAttribute("onchange").split(";");

                for (var i = 0; i < functionsArray.length; i++) {
                    var fn = window[functionsArray[i].trim()];
                    if (typeof fn === 'function') {
                        fn.call($(_this));
                    } else {
                        functionsArray[i];
                    }
                }
            }
            _this.removeAttribute("cancel-onchange");

            //Chama a funcao que colcou no onblur
            if (_this.hasAttribute("onvalidate")) {
                var fn = window[_this.getAttribute("onvalidate")];
                if (typeof fn === 'function') {
                    fn.call($(_this));
                }
            }
            _this = null;
        });

        selectEl.on("focus", function (e) {
            var _this = this.parentElement;
            //e.preventDefault();
            //e.stopPropagation();

            //mostra que esta com focu
            _this.classList.add("ab-select-focus");
            _this = null;
        });

        //Ir para o próximo item quando apertar enter
        selectEl.on("keydown", function (event) {
            var _this = this.parentElement;
            return goToNextTabindex(event, $(_this), "tap");
            _this = null;
        });
    }

    connectedCallback() {
        if (!this.classList.contains(this.mainClass)) {
            /*this.shadowDom = this.attachShadow({
                mode: 'open'
            }); */
            this._render();
            this._addEvent();
        }
    }

    static get observedAttributes() {
        return ["error", "is-disabled", "label", "width", "id", "width-on-bigscreen", "tab-index", "goto-tab-index", "description", "icon", "visible"];
    }

    attributeChangedCallback(attrName, oldVal, newVal) {
        switch (attrName) {
            case "error":
                if (newVal != undefined && newVal != null) {
                    this.legend.innerText = newVal;
                    this.classList.add("ab-select-error");
                } else {
                    this.legend.innerText = "";
                    if (this.hasAttribute("description")) {
                        this.legend.innerText = this.getAttribute("description");
                    }
                    this.classList.remove("ab-select-error");
                }
                break;

            case "is-disabled":
                if (newVal == "true") {
                    this.select.setAttribute("disabled", true);
                    this.removeAttribute("error");
                } else {
                    this.select.removeAttribute("disabled");
                }
                break;

            case "label":
                this.label.innerText = newVal;
                break;

            case "width":
                this.style.width = newVal;
                break;

            case "id":
                if (oldVal != null) {
                    this.img.setAttribute("id", newVal + "sl_img");
                    this.label.setAttribute("for", newVal + "sl_input");
                    this.label.setAttribute("id", newVal + "sl_label");
                    this.select.setAttribute("id", newVal + "sl_input");
                    this.legend.setAttribute("id", newVal + "sl_span");
                }
                break;

            case "width-on-bigscreen":
                if (pmb.utils.showBigScreen(top.$("body"))) {
                    this.style.width = newVal;
                }
                break;

            case "tab-index":
                this.select.setAttribute("tabindex", newVal);
                break;

            case "goto-tab-index":
                this.select.setAttribute("goto-tab-index", newVal);
                break;

            case "description":
                if (newVal) {
                    this.legend.innerText = newVal;
                }
                break;

            case "icon":
                obj.children("#" + id + "sl_img").remove();

                var img = $("<img />");
                img.attr("id", id + "sl_img");

                //Coloca icone
                if (obj.attr("error")) {
                    if (obj.attr("error-icon")) {
                        img.attr("src", obj.attr("error-icon"));
                    } else {
                        img.attr("src", obj.attr("icon"));
                    }
                } else {
                    img.attr("src", obj.attr("icon"));
                }

                img.appendTo(obj);
                img = null;

                //Muda estilo com imagem
                this.classList.add("ab-select-img");
                break;

            case "visible":
                if (newVal == "true") {
                    this.style.display = "block";
                } else if (newVal == "false") {
                    this.style.display = "none";
                }
                break;
        
            default:
                break;
        }
    }

    setText(text) {

    }

    getText() {
        let index = this.select.options.selectedIndex;
        if (index == -1) {
            return "";
        } 

        return this.select.options[index].value;
    }

    setNumber(text) {

    }

    getNumber() {
        let index = this.select.options.selectedIndex;
        if (index == -1) {
            return "";
        } 

        return parseInt(this.select.options[index].value);
    }

    getSelected(select) {
        var selectedIndex = select.options.selectedIndex;

        if (selectedIndex == -1) {
            return false;
        }

        if (select.options[selectedIndex].value == "") {
            return false;
        } else {
            return true;
        }
    }

    fillSelect(selectArr) {
        if (!selectArr) {
            return;
        }

        //bloqueia combo
        $(this.select).block();

        //limpa combo
        this.select.innerHTML = "";

        //preenche combo
        var optionsArray = [];
        optionsArray.push(option);
        for (var i = 0; i < selectArr.length; i++) {
            optionsArray.push("<option value='" + selectArr[i].valor + "'>" + selectArr[i].nome + "</option>");
        }
        this.select.innerHTML = optionsArray.join("");

        var option = document.createElement("OPTION");
        option.setAttribute("selected", true);
        option.setAttribute("value", "");
        option.innerHTML = "Selecione";
        this.select.prepend(option);

        $(this.select).unblock();
    };

}

customElements.define('ab-select', AbSelect);
"use strict";

class AbText extends AbInput {

    constructor() {
        super();

        this.childClass = "ab-text";
        this.errorChild = false;

        this.abner = new AbnerUtils();

        this._addEventChild();
    }

    _renderChild() {
        //adiciona class
        this.classList.add(this.childClass);
    }

    _addEventChild() {
        var input = $(this.input);
        var _this = this;
        var abner = new AbnerUtils();

        //evento change quando alterar o valor do input
        input.on("change", function (e) {
            e.preventDefault();

            if (_this.getAttribute("letters-only") == "true" && this.value.length > 0) {
                var text = abner.removeAccent(this.value);
                this.value = text;
                var textmatch = this.value.match(/^[A-Za-z ]+$/);
                if (textmatch == null) {
                    _this.setAttribute("error", "É permitido apenas letras");
                    this.errorChild = true;
                } else {
                    if (!this.errorParent) {
                        _this.removeAttribute("error");
                    }
                    this.errorChild = false;
                }
            };
        });
    }

    connectedCallback() {
        if (!this.classList.contains(this.childClass)) {
            /*this.shadowDom = this.attachShadow({
                mode: 'open'
            }); */
            super.connectedCallback();
            this._renderChild();
        }
    }

    static get observedAttributes() {
        return ['id', 'error', 'is-disabled', 'label', 'width', 'maxlength', 'width-on-bigscreen', 'tab-index', 'goto-tab-index', 'value'];
    }

    attributeChangedCallback(attrName, oldVal, newVal) {
        super.attributeChangedCallback(attrName, oldVal, newVal);
    }

}

customElements.define('ab-text', AbText);
"use strict";

class AbTextReadOnly extends HTMLElement {

    constructor() {
        super();

        this.label = document.createElement("legend");
        this.text = document.createElement("p");

        this.mainClass = "ab-text-read-only";
    }

    _render() {
        //Cria um id
        var id = generateID();
        if (this.hasAttribute("id")) {
            //description: Identificação do componente. Atributo obrigatório para interagir com o objeto | Alfanumérico | sim | vazio |
            id = this.getAttribute("id");
        } else {
            this.setAttribute("id", id);
        };

        var contentHtml = this.innerHTML ;
        this.innerHTML = "";

        //coloca classe
        this.classList.add(this.mainClass);

        //width
        if (this.hasAttribute("width")) {
            //description: Define a largura do componente| % ou px| não| |
            this.style.width = this.getAttribute("width");
        };

        //verifica width-on-bigscreen
        if (this.hasAttribute("width-on-bigscreen")) {
            //description: Define a largura do componente em telas maiores| % ou px| não| |
            if (abner.utils.showBigScreen(top.$("body"))) {
                this.classList.add("ab-text-read-only-bigscreen")
                this.style.width = this.getAttribute("width-on-bigscreen");
            } else {
                this.classList.remove("ab-text-read-only-bigscreen")
            }
        };

        //Coloca Label
        this.label.setAttribute("id", id + "label");

        if (this.hasAttribute("label")) {
            //description: Colocar uma descrição que represente o valor que será colocado no input da página | Alfanumérico | não | vazio |
            this.label.innerText = this.getAttribute("label");
        }
        this.appendChild(this.label);

        //Coloca Input
        this.text.classList.add("ab-paragrafo-medio");
        this.text.setAttribute("id", id + "text");
        if (contentHtml.length > 0) {
            this.text.innerHTML = contentHtml;
        }
        this.appendChild(this.text);

        //visible
        if (this.getAttribute("visible") == "false") {
            //values: true;false
            //description: Define se o componente estará visível | Boolean | não| true |
            this.style.display = "none";
        };

        //limpa variaveis
        id = null;
        contentHtml = null;
    }

    connectedCallback() {
        if (!this.classList.contains(this.mainClass)) {
            /*this.shadowDom = this.attachShadow({
                mode: 'open'
            }); */
            this._render();
        }
    }

    static get observedAttributes() {
        return ["label", "id", "width", "width-on-bigscreen", "visible"];
    }

    attributeChangedCallback(attrName, oldVal, newVal) {

        switch (attrName) {
            case "label":
                this.label.innerText = newVal;
                break;
    
            case "id":
                this.label.setAttribute("id", newVal + "label");
                this.text.setAttribute("id", newVal + "text");
                break;
    
            case "width":
                this.style.width = newVal;
                break;
    
            case "width-on-bigscreen":
                if ($("ab-page").attr("fullscreen") == "true"){
                    this.style.width = this.getAttribute("width-on-bigscreen");
                }
                break;
    
            case "visible":
                if (newVal == "true") {
                    this.style.display = "inline-block";
                } else if (newVal == "false") {
                    this.style.display = "none";
                }
                break;
        
            default:
                break;
        }
    }

    setText(text) {
        this.text.innerHTML = text;
    }

    getText() {
        return this.text.innerText;
    }

    getText() {
        return this.text.innerText;
    }

    setHtml() {

    }
}
customElements.define('ab-text-read-only', AbTextReadOnly);
"use strict";

class AbTextAreaUnderline extends HTMLElement {

    constructor() {
        super();

        this.textarea = document.createElement("textarea");
        this.label = document.createElement("label");
        this.span = document.createElement("span");

        this.mainClass = "ab-text-area-underline";

        this._addEvent();
    }

    _render() {
        //Cria um id
        var id = generateID();
        if (this.hasAttribute("id")) {
            id = this.getAttribute("id");
        } else {
            this.setAttribute("id", id);
        }

        //coloca classe
        this.classList.add(this.mainClass);

        if (!this.hasAttribute("max-rows")) {
            this.setAttribute("max-rows", "20");
        }

        //width
        if (this.hasAttribute("width")) {
            //description: Define a largura do componente | % ou px | não | 100% |
            this.style.width = this.getAttribute("width");
        }

        //Obrigatorio checagem abaixo do width
        if (this.hasAttribute("width-on-bigscreen")) {
            if (pmb.utils.showBigScreen(top.$("body"))) {
                this.style.width = obj.attr("width-on-bigscreen");
            }
        }

        //Coloca Textarea
        this.appendChild(this.textarea);
        this.textarea.setAttribute("id", id + "txa_input");

        //onfocus no objeto
        if (this.hasAttribute("onfocus")) {
            this.textarea.setAttribute("onfocus", this.getAttribute("onfocus"));
        }

        if (this.hasAttribute("maxlength")) {
            //description: Define a quantidade máxima de caracteres a ser digitado no campo | numeric | não | 
            this.textarea.setAttribute("maxlength", this.getAttribute("maxlength"));
        }

        if (this.hasAttribute("rows")) {
            //description: Define a quantidade de linhas da exibição do campo | numeric | não | 1 |
            this.textarea.setAttribute("rows", this.getAttribute("rows"));
        } else {
            this.textarea.setAttribute("rows", "1");
        }

        //Coloca label
        this.appendChild(this.label);
        this.label.setAttribute("id", id + "txa_label");
        this.label.setAttribute("for", id + "txa_input");

        if (this.hasAttribute("label")) {
            //description: Define o texto que será apresentado como label do campo | varchar | não | |
            this.label.innerText = this.getAttribute("label");
        };

        //Coloca mensagem de erro 
        this.appendChild(this.span);
        this.span.setAttribute("id", id + "txa_span");

        if (this.hasAttribute("error")) {
            //description: Define mensagem de erro caso o campo esteja inválido | varchar | não | |
            this.span.innerText = this.getAttribute("error");
            this.classList.add("ab-text-area-underline-error");
        }

        //desabilitar o campo quando o atributo is-disabled é true
        if (this.getAttribute("is-disabled") == "true") {
            //values: true;false
            //description: Define se o campo estará desativado | true ou false | não | false |
            this.textarea.setAttribute("disabled", true);
        }

        if (this.hasAttribute("max-width")) {
            //description: Define a largura máxima do componente | % ou px | não | 100% |
            this.style.maxWidth = this.getAttribute("max-width");
        }

        //coloca tabindex
        if (this.hasAttribute("tab-index")) {
            //description: Ordem de tabulação na página.| Numérico| não| vazio|
            this.textarea.setAttribute("tabindex", this.getAttribute("tab-index"));
        }

        //para qual index vai
        if (this.hasAttribute("goto-tab-index")) {
            this.textarea.setAttribute("goto-tab-index", this.getAttribute("goto-tab-index"));
        }

        //para qual index vai
        if (this.hasAttribute("stop-tab-index")) {
            this.textarea.setAttribute("stop-tab-index", this.getAttribute("stop-tab-index"));
        }

        /*
        DATA BINDING
        WORK IN PROGRESS
        USE AT YOUR OWN RISK
        BE AWARE OF DRAGONS
        - GABS 02/10/2019
        */

        if (this.hasAttribute("data-binding-obj")) {
            this.createDataBinding();
        }

    }

    _addEvent() {
        var textarea = $(this.textarea);
        var _this = this;

        textarea.on("keyup", function (event) {
            if (_this.getAttribute("auto-height") == "true") {
                while ($(this)[0].scrollHeight > $(this)[0].offsetHeight) {
                    var rows = this.getAttribute("rows");
                    var maxRow = _this.getAttribute("max-rows");
                    rows++;
                    if (rows >= maxRow) {
                        break
                    } else {
                        this.setAttribute("rows", rows);
                    }
                }
            }

            //Ir para o próximo item quando apertar enter
            return goToNextTabindex(event, $(this), "focus");
        });

        textarea.on("blur", function () {
            //BugIOS Retira a marcacao do foco
            _this.removeAttribute("focus-executed");

            //Triga as validações
            _this.setAttribute("cancel-onchange", "true");
            $(this).trigger("change");

            //Chama a funcao que colcou no onblur
            if (_this.hasAttribute("onblur")) {
                var fn = window[_this.getAttribute("onblur")];
                if (typeof fn === 'function') {
                    fn.call($(_this));
                }
            }
        });

        textarea.on("focus", function (e) {
            //BugIOS
            if (_this.getAttribute("focus-executed") == "true") {
                return false;
            }
            _this.setAttribute("focus-executed", "true");

            e.preventDefault();
            e.stopPropagation();

            if (_this.getAttribute("is-disabled") != "true") {
                //Coloca foco no input
                _this.classList.add("ab-text-area-underline-min");

                $(this).setCursorPosition($("textarea")[0].value.length);

                //Arruma scroll no mobile quando sobe o teclado para ANDROID
                if (window.isAndroid) {
                    setTimeout(function () {
                        _this.scrollIntoView();
                    }, 500);
                }
            }

            //Chama a funcao que colocou no onfocus
            if (_this.hasAttribute("onfocus")) {
                var fn = window[_this.getAttribute("onfocus")];
                if (typeof fn === 'function') {
                    fn.call($(_this));
                }
            }
        });

        //evento change quando alterar o valor do input
        textarea.on("change", function (e) {
            e.preventDefault();
            e.stopPropagation();

            if (this.value == "" || this.value == null) {
                if (_this.getAttribute("focus-executed") != "true") {
                    _this.classList.remove("ab-text-area-underline-min");
                }

                if (_this.hasAttribute("rows")) {
                    this.setAttribute("rows", _this.getAttribute("rows"));
                } else {
                    this.setAttribute("rows", "1");
                }
            } else {
                _this.classList.add("ab-text-area-underline-min");
            }

            //verifica se o campo é obrigatório
            if (_this.getAttribute("is-required") == "true") {
                //values: true;false
                //description: Define se o campo será obrigatório | true ou false | não | false |
                if (this.value.length == 0) {
                    _this.setAttribute("error", "Campo obrigatório");
                } else {
                    _this.removeAttribute("error");
                }
            }

            //se tiver ajuste
            if (_this.getAttribute("auto-height") == "true") {
                while ($(this)[0].scrollHeight > $(this)[0].offsetHeight) {
                    var rows = this.getAttribute("rows");
                    var maxRow = _this.getAttribute("max-rows");
                    rows++;
                    this.setAttribute("rows", rows);
                    if (rows >= maxRow) {
                        break
                    }
                }
            }

            //Chama a funcao que colcou no onblur
            if (_this.hasAttribute("onchange") && _this.getAttribute("cancel-onchange") != "true") {
                var fn = window[_this.getAttribute("onchange")];
                if (typeof fn === 'function') {
                    fn.call($(_this));
                }
            }
            _this.removeAttribute("cancel-onchange");

            //Chama a funcao que colcou no onblur
            if (_this.hasAttribute("onvalidate")) {
                var fn = window[_this.getAttribute("onvalidate")];
                if (typeof fn === 'function') {
                    fn.call($(_this));
                }
            }
        });
    }

    connectedCallback() {
        if (!this.classList.contains(this.mainClass)) {
            /*this.shadowDom = this.attachShadow({
                mode: 'open'
            }); */
            this._render();
        }
    }

    static get observedAttributes() {
        return ["error", "is-disabled", "label", "id", "width", "maxlength", "rows"];
    }

    attributeChangedCallback(attrName, oldVal, newVal) {

        switch (attrName) {
            case "error":
                if (newVal != undefined && newVal != null) {
                    this.span.innerText = newVal;
                    this.classList.add("ab-text-area-underline-error");

                    /*if (this.hasAttribute("error-icon")) {
                        obj.children("#" + id + "txa_img").attr("src", obj.attr("error-icon"));
                    }*/
                } else {
                    this.classList.remove("ab-text-area-underline-error");
                    this.span.innerText = "";

                    /*if (obj.attr("icon")) {
                        obj.children("#" + id + "txa_img").attr("src", obj.attr("icon"));
                    }*/
                }
                break;

            case "is-disabled":
                //quando o atributo is-disabled é alterado, adiciona ou retira a classe underline-min
                if (newVal == "true") {
                    this.classList.add("ab-text-area-underline-min");
                    this.textarea.setAttribute("disabled", true);
                } else {
                    if (this.textarea.value == "") {
                        this.classList.remove("ab-text-area-underline-min");
                    }
                    this.textarea.removeAttribute("disabled");
                }
                break;

            case "label":
                this.label.innerText = newVal;
                break;

            case "id":
                this.textarea.setAttribute("id", newVal + "txa_input");
                this.label.setAttribute("for", newVal + "txa_input");
                this.label.setAttribute("id", newVal + "txa_label");
                this.span.setAttribute("id", newVal + "txa_span");
                break;

            case "width":
                this.style.width = newVal;
                break;

            case "maxlength":
                this.textarea.setAttribute("maxlength", newVal);
                break;

            case "rows":
                this.textarea.setAttribute("rows", newVal);
                break;

            case "data-binding-obj":
                this.createDataBinding(obj);
                break;
        
            default:
                break;
        }
    }

    createDataBinding() {

        new pmb.utils.DataBinding({
            object: this.getAttribute("data-binding-obj")
        })
        .addBinding(this.textarea, "value", "change");

    }

    setText(text) {
        this.textarea.value = text;
        if (text.length > 0) {
            this.classList.add("ab-text-area-underline-min");
        }
    }

    getText() {
        return this.textarea.value;
    }
}

customElements.define('ab-text-area-underline', AbTextAreaUnderline);
"use strict";

$.fn.incrementRequest = function () {
    var curr = 0;
    if (this.attr("current-request")) {
        curr = parseInt(this.attr("current-request"));
    }

    curr++;
    this.attr("current-request", curr);
}

$.fn.resetRequest = function () {
    this.removeAttr("current-request");
}

class AbPage extends HTMLElement {

    constructor() {
        super();

        this.htmlObj = $("html,body")[0];

        //pageLoader
        this.pageLoad = document.createElement("div");
        this.wrapper = document.createElement("div");
        this.loadBar = document.createElement("div");
        this.barRange = document.createElement("div");
        this.loadText = document.createElement("p");

        this.mainClass = "ab-page";
    }

    _render() {
        this.classList.add(this.mainClass);

        //Cria um id
        if (!this.hasAttribute("id")) {
            //description: Atributo para identificar o objeto| Alfanumérico| não| vazio|
            this.setAttribute("id", generateID());
        }

        // parametros
        if (this.getAttribute("fullscreen") != "false") {
            //values: true;false
            //description: Usa o tamanho total da tela | true ou false | não | true |
            this.htmlObj.style.margin = "0px";
            this.htmlObj.style.padding = "0px";
            this.htmlObj.style.width = "100%";
            this.htmlObj.style.height = "100%";

            this.style.top = "0px";
            this.style.left = "0px";
            this.style.bottom = "0px";
            this.style.right = "0px";
            this.style.height = "100%";
            this.style.width = "100%";
            this.style.position = "fixed";
        } else{
            $(this).addClass("page--limited");
        }

        // Valor padrao
        this.style.zIndex = "0";

        //se existir um max-request, construir o sistema de load
        if (this.hasAttribute("max-request")) {
            //description: Máximo de requests que terá na página para o loader | Numérico | não | 0 |
            this._createLoader();
        } else{
            document.querySelector("html").classList.add("html-page-loaded");
        }

    }

    connectedCallback() {
        if (!this.classList.contains(this.mainClass)) {
            /*this.shadowDom = this.attachShadow({
                mode: 'open'
            }); */
            this._render();
        }
    }

    static get observedAttributes() {
        return ["loader-visibility", "current-request"];
    }

    attributeChangedCallback(attrName, oldVal, newVal) {
        if (attrName == "loader-visibility") {
            if (newVal != "true") {
                $(this.logo).fadeOut(100, function () {
                    this.remove();
                });

                $(this.pageLoad).fadeOut(100, function () {
                    this.remove();
                });
            } else if (this.pageLoad.length == 0) {
                this._createLoader();
            } else {
                $(this.pageLoad).fadeIn(100);
            }

        } else if (attrName == "current-request") {
            var reqAtual = parseInt(newVal);
            var reqMax = parseInt(this.getAttribute("max-request"));
            var total = ((100 / reqMax) * reqAtual);

            this.barRange.style.width = total + "%";

            if (total >= 100) {
                this.setAttribute("loader-visibility", "false");
                document.querySelector("html").classList.add("html-page-loaded");
            }

            reqAtual = null;
            reqMax = null;
            total = null;
        }
    }

    _createLoader() {

        this.pageLoad.classList.add("ab-page-loader");
        this.pageLoad.setAttribute("id", "ab-page-loader");
        this.pageLoad.style.display = "block";
        this.appendChild(this.pageLoad);

        this.wrapper.classList.add("ab-page-loader-wrapper");
        this.pageLoad.appendChild(this.wrapper);

        this.loadBar.classList.add("ab-page-loader-path");
        this.wrapper.appendChild(this.loadBar);

        this.barRange.classList.add("ab-page-loader-range");
        this.barRange.setAttribute("id", "ab-page-loader-range");
        this.loadBar.appendChild(this.barRange);

        this.loadText.classList.add("ab-page-loader-text");
        this.loadText.innerText = "carregando...";
        this.wrapper.appendChild(this.loadText);
    }
}
customElements.define('ab-page', AbPage);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
